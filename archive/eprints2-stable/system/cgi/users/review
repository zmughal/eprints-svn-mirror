######################################################################
#
#  Review Author's Documents in the Archive
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Database;
use EPrints::EPrint;
use EPrints::MetaField;
use EPrints::Session;
use EPrints::User;

use strict;

EPrints::Session::start;

# Check we have privs
if( !&SESSION->auth_check( "deposit" ) )
{
	exit;
}

my $page;
my $action = &SESSION->get_action_button();
if( !defined $action )
{
	$page = make_form();
}
else
{
	$page = process_form( $action );
}
exit;

#############################################################

sub make_form
{
	my $user = &SESSION->current_user;

	# cjg. This should maybe extract stuff you can edit
	# not just stuff you deposited.

	my $ds = &ARCHIVE->get_dataset( "archive" );	
	my @eprints = $user->get_owned_eprints( $ds );

	my $page = &SESSION->make_doc_fragment();
	my $title = &SESSION->html_phrase( "cgi/users/review:title" );

	if( scalar @eprints == 0 )
	{
		$page->appendChild( &SESSION->html_phrase( 
			"cgi/users/review:no_docs" ) );

		$page->appendChild( &SESSION->html_phrase( 
			"general:userhome_link" ) );

		&SESSION->build_page( $title, $page, "review_none" );
		&SESSION->send_page();
		return;
	}
	my $r_req = &ARCHIVE->get_conf( "allow_user_removal_request" ); 
	my $checkout = &ARCHIVE->get_conf( "allow_user_checkout_eprint" ); 

	$page->appendChild( &SESSION->html_phrase( "cgi/users/review:blurb" ) );

	if( $checkout )
	{
		$page->appendChild( &SESSION->html_phrase( 
			"cgi/users/review:checkout_info" ) );
	}
	if( $r_req )
	{
		$page->appendChild( &SESSION->html_phrase( 
			"cgi/users/review:remove_info" ) );
	}

	my( $form, $table, $tr, $td, $th );

	$form = &SESSION->render_form( "post", "review" );
	$page->appendChild( $form );
	$table = &SESSION->make_element( "table", border=>1, cellpadding=>3 );
	$form->appendChild( $table );

	$tr = &SESSION->make_element( "tr" );
	$table->appendChild( $tr );
	$th = &SESSION->make_element( "th" );
	$tr->appendChild( $th );
	$th->appendChild( &SESSION->html_phrase( "cgi/users/review:document" ) );
	$th = &SESSION->make_element( "th" );
	$tr->appendChild( $th );
	if( $checkout )
	{
		$th = &SESSION->make_element( "th" );
		$tr->appendChild( $th );
	}
	if( $r_req )
	{
		$th = &SESSION->make_element( "th" );
		$tr->appendChild( $th );
	}
	
	my $eprint;
	foreach $eprint ( @eprints )
	{
		$tr = &SESSION->make_element( "tr" );
		$table->appendChild( $tr );

		$td = &SESSION->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( $eprint->render_citation_link() );

		$td = &SESSION->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( &SESSION->render_action_buttons(
			"clone_".$eprint->get_value( "eprintid" )=>
				&SESSION->phrase( "cgi/users/review:clone" ) ) );

		if( $checkout )
		{
			$td = &SESSION->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( &SESSION->render_action_buttons(
				"checkout_".$eprint->get_value( "eprintid" )=>
				&SESSION->phrase( "cgi/users/review:req_checkout" ) ) );

		}
		if( $r_req )
		{
			$td = &SESSION->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( &SESSION->render_action_buttons(
				"remove_".$eprint->get_value( "eprintid" )=>
				&SESSION->phrase( "cgi/users/review:req_remove" ) ) );

		}
	}
	&SESSION->build_page( $title, $page, "review_list" );
	&SESSION->send_page();
	return;

}

sub process_form
{
	my( $action ) = @_;

	my $user = &SESSION->current_user;
	my $ds = &ARCHIVE->get_dataset( "archive" );	

	if( $action =~ m/^clone_(.+)$/ )
	{
		my $eprint = EPrints::EPrint->new( $1, $ds );
		my $inbox_ds = &ARCHIVE->get_dataset( "inbox" );
		if( defined $eprint )
		{
			my $copy = $eprint->clone( $inbox_ds, 1 );
			if( defined $copy )
			{
				# Copied OK, redirect to workspace
				&SESSION->redirect( &ARCHIVE->get_conf( "userhome" ) );
#cjg is the next bit meaningless? (upto return)
				my $page = &SESSION->make_doc_fragment();
				my $title = &SESSION->html_phrase( "cgi/users/review:title" );
				&SESSION->build_page( $title, $page );
				&SESSION->send_page();
				return;
			}
		}
		&SESSION->render_error(
			&SESSION->html_phrase( "cgi/users/review:cant_clone" ) );
		return;
	}
	my $r_req = &ARCHIVE->get_conf( "allow_user_removal_request" ); 

	if( $action=~ m/^remove_(.+)$/ && $r_req )
	{
		my $eprint = EPrints::EPrint->new( $1, $ds );
		if( !defined $eprint )
		{
			&SESSION->render_error(
				&SESSION->html_phrase( "cgi/users/review:cant_find_it" ) );
			return;
		}		
		if( $user->is_owner( $eprint ) )
		{
			&removal_request_form( $eprint );
			return;
		}
		&SESSION->render_error(
			&SESSION->html_phrase( "cgi/users/review:cant_remove" ) );
		return;
	}

	my $checkout = &ARCHIVE->get_conf( 
			"allow_user_checkout_eprint" ); 

	if( $action=~ m/^checkout_(.+)$/ && $checkout)
	{
		my $eprint = EPrints::EPrint->new( $1, $ds );
		if( !defined $eprint )
		{
			&SESSION->render_error(
				&SESSION->html_phrase( "cgi/users/review:cant_find_it" ) );
			return;
		}		
		if( $user->is_owner( $eprint ) )
		{
			$eprint->move_to_inbox;
			&SESSION->redirect( &ARCHIVE->get_conf( "userhome" ) );
			return;
		}
		&SESSION->render_error(
			&SESSION->html_phrase( "cgi/users/review:cant_checkout" ) );
		return;
	}

	# If submit is defined, must have been a removal request form that was
	# filled out.
	if( $action eq "send" )
	{
		&handle_removal_request( $user );
		return;
	}
		
	# no valid action or "cancel" from the remove request.
	&make_form();
}



##
## remove_request_form( $eprint )
##
##  Display a removal request form.
##

sub removal_request_form
{
	my( $eprint ) = @_;

	my $title = &SESSION->html_phrase( "cgi/users/review:remove_title" );
	my $page = &SESSION->make_doc_fragment();

	$page->appendChild( &SESSION->html_phrase( "cgi/users/review:remove_blurb",
		citation=>$eprint->render_citation_link() ) );

	my( $form, $table, $tr, $td, $th );


	my $reason_field = EPrints::MetaField->new(
		confid=>'remove_request',
		name=>'reason',
		type=>'longtext',
		input_rows=>15 );

	$page->appendChild(
		&SESSION->render_input_form(
			fields=>[ $reason_field ],
			show_help=>1,
			default_action=>"send",
			buttons=>{
				_order=> [ "send","cancel" ],
				send => &SESSION->phrase( "cgi/users/review:send" ),
				cancel => &SESSION->phrase( "cgi/users/review:cancel" )
			},
			hidden_fields=>{
				eprintid => $eprint->get_value( "eprintid" )
			},
			dest=>"review" ) );

	&SESSION->build_page( $title, $page, "review_remove_form" );
	&SESSION->send_page();
	return;
}


##
## $wrote_page = handle_removal_request( $user )
##
##  Handle the POSTed information from a removal request form.
##

sub handle_removal_request
{
	my( $user ) = @_;
	
	# Get the EPrint we're dealing with
	my $ds = &ARCHIVE->get_dataset( "archive" );	

	my $eprint = EPrints::EPrint->new( &SESSION->param( "eprintid" ), $ds );
	if( !defined $eprint )
	{
		&SESSION->render_error(
			&SESSION->html_phrase( "cgi/users/review:cant_find_it" ) );
		return;
	}		
	if( !$user->is_owner( $eprint ) )
	{
		&SESSION->render_error(
			&SESSION->html_phrase( "cgi/users/review:cant_remove" ) );
		return;
	}

	my $reason = &SESSION->param( "reason" );
	my $url = &ARCHIVE->get_conf( "perl_url" ).
		"/users/staff/edit_eprint?eprintid=".$eprint->get_value( "eprintid" );
	
	&SESSION->mail_administrator( 	
		"cgi/users/review:remove_mail_subject",
		"cgi/users/review:remove_mail",
		citation=>$eprint->render_citation(),
		user=>$user->render_description(),
		email=>$user->render_value( "email" ),
		reason=>( EPrints::Utils::is_set( $reason ) ? &SESSION->make_text( $reason ) 
			 : &SESSION->html_phrase( "cgi/users/review:no_reason" ) ),
		url=>&SESSION->make_text( $url ) );
	#cjg err sending mail check?

	my $title = &SESSION->html_phrase( "cgi/users/review:remove_title" );
	my $page = &SESSION->make_doc_fragment();
	$page->appendChild( &SESSION->html_phrase( "cgi/users/review:done" ) );
	$page->appendChild( &SESSION->html_phrase( "general:userhome_link" ) );
	&SESSION->build_page( $title, $page, "review_remove_done" );
	&SESSION->send_page();
	
	return;
}

