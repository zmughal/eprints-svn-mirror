######################################################################
#
#  EPrints Object Exporter
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints;

use strict;
my $repository = EPrints->new->current_repository;
exit( 0 ) unless( defined $repository );
# $repository->get_database->set_debug( 1 );

my $path_info = $repository->get_request->path_info;

unless( $path_info =~ m!^/([^/]+)(/([^/]*)?)?! ) 
{
	error( $repository, $repository->html_phrase( "cgi/export:no_id" ) );
	exit;
}

my $id = $1;
my $afterid = $2;
my $format = $3;
my $export_url = $repository->get_repository->get_conf( "perl_url" )."/export";

if( !defined $id ) 
{
	error( $repository, $repository->html_phrase( "cgi/export:no_id" ) );
	exit;
}

if( !defined $afterid ) 
{
	$repository->redirect( $export_url."/".$id."/" );
	exit;
}

my $subject = EPrints::DataObj::Subject->new( 
			$repository, 
			$id, 
			$repository->get_repository->get_dataset( "archive" ) );
if( !$subject )
{
	error( 
		$repository, 
		$repository->html_phrase( 
			"cgi/export:subject_not_found",
			id => $repository->make_text( $id ) ) );
	exit;
}

if( !defined $format || $format eq "" ) 
{
	my $page = $repository->xhtml->page( {
		title => $repository->html_phrase( "cgi/export:title",
				shortname => $subject->render_description ),
		body => $repository->html_phrase( "cgi/export:page",
				citation => $subject->render_citation_link,
				formats => $subject->render_export_links ),
		},
		pageid=>"export" );
	$page->send;
	exit;
}

my $list = $repository->dataset( "subject" )->search( 
	filters => [
		{
			meta_fields => [qw/ ancestors /],
			value => $id,
		}
	],
);

my @plugins = $repository->plugin_list( 
				type=>"Export", 
				can_accept=>"dataobj/subject", 
				is_visible=>"all" );
my $ok = 0;
foreach( @plugins ) { if( $_ eq "Export::$format" ) { $ok = 1; last; } }
unless( $ok ) 
{
	error( $repository, $repository->html_phrase( "cgi/export:not_available",
				format => $repository->make_text( $format ) ) );
	exit;
}

my $plugin = $repository->plugin( "Export::$format" );

my %arguments = %{$plugin->param( "arguments" )};
# fetch the plugin arguments, if any
foreach my $argname (keys %arguments)
{
	if( defined $repository->param( $argname ) )
	{
		$arguments{$argname} = $repository->param( $argname );
	}
}

$repository->send_http_header( "content_type"=>$plugin->param("mimetype") );
$plugin->initialise_fh( \*STDOUT );
print $list->export( $format, %arguments );
	
exit;

sub error
{
	my( $repository, $msg ) = @_;

	$repository->build_page( 
		$repository->html_phrase( "cgi/export:error_title" ),
		$msg,
		"export_error" );
	$repository->send_page;
}

