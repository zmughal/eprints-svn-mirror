#!/usr/bin/perl -w -I/opt/ep2stable/perl_lib

######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

# nb. the --purge option

=pod

=head1 NAME

B<reindex_dataset> - Queue everything in a dataset for indexing

=head1 SYNOPSIS

B<reindex_dataset> I<archiveid> I<datasetid> [B<options>] 

=cut



use Getopt::Long;
use Pod::Usage;
use strict;

use EPrints::Session;
use EPrints::Subject;
use EPrints::ImportXML;

my $xml = 0;
my $version = 0;
my $verbose = 0;
my $quiet = 0;
my $purge = 1;
my $help = 0;
my $man = 0;
	
GetOptions( 
	'help|?' => \$help,
	'man' => \$man,
	'purge' => \$purge , 
	'version' => \$version,
	'verbose+' => \$verbose,
	'silent' => \$quiet,
	'quiet' => \$quiet
) || pod2usage( 2 );
EPrints::Utils::cmd_version( "reindex_dataset" ) if $version;
pod2usage( 1 ) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;
pod2usage( 2 ) if( scalar @ARGV != 2 );

my $noise = 1;
$noise = 0 if( $quiet );
$noise = 1+$verbose if( $verbose );

# Set STDOUT to auto flush (without needing a \n)
$|=1;

my $session = new EPrints::Session( 1, $ARGV[0], $noise );
exit( 1 ) unless defined $session;
my $datasetid = $ARGV[1];
my $dataset = $session->get_archive()->get_dataset( $datasetid );
if( !defined $dataset )
{
	$session->terminate();
	print "Exiting due to unknown dataset.\n" if( $noise >= 2 );
	exit;
}

my $fn = sub {
	my( $session, $dataset, $item ) = @_;

	foreach my $field ( $dataset->get_fields() )
	{
		next unless( $field->get_property( "text_index" ) );

		$session->get_db->index_queue( 
			$dataset->id,
			$item->get_id,
			$field->get_name );
	}	
	if( $dataset->confid eq "eprint" )
	{
		$session->get_db->index_queue( 
			$dataset->id,
			$item->get_id,
			$EPrints::Utils::FULLTEXT );
	}

	if( $session->get_noise() >= 2 )
	{
		print STDERR "Queued item: ".$dataset->id()."/".$item->get_id()."\n";
	}
};

if( $purge )
{
	EPrints::Index::purge_index( $session, $dataset );
}

$dataset->map( $session, $fn );


$session->terminate();
print "Exiting normally.\n" if( $noise >= 2 );
exit;

