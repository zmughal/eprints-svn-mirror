#!/usr/bin/perl -w -I/opt/eprints2/perl_lib

use EPrints;
use strict;

my $session = new EPrints::Session();
exit( 1 ) unless( defined $session );

my ( $eprint, $doc );

# Get requested document
my $docid = $session->param( "docid" );
$doc = EPrints::DataObj::Document->new( $session, $docid );
if( !defined $doc )
{
	my $eprintid = $session->param( "eprintid" );
	$eprint = EPrints::DataObj::EPrint->new( $session, $eprintid );
	# If no docid is specified we need a valid eprintid..
	if( !defined $eprint || $eprint->get_value( "metadata_visibility" ) eq "hide" ) 
	{
		$session->render_error( $session->html_phrase( 
			"cgi/users/edit_eprint:cant_find_it", 
			id => $session->make_text( $eprintid ) ) );
		$session->terminate();
		exit( 1 );
	}
	# ..and the eprint must have no documents
	if( $eprint->get_value( "full_text_status" ) ne "none" )
	{
		$session->render_error( $session->html_phrase( "general:bad_param" ),
			$eprint->get_url );
		$session->terminate();
		exit( 1 );
	}
}
else
{
	$eprint = $doc->get_eprint;
}

# Check requested document isn't already OA
if( defined $doc )
{
	my $security = $doc->get_value( "security" );
	if( !defined $security || $security eq "" )
	{
		$session->render_error( $session->html_phrase( "request/error:already_oa" ),
			$eprint->get_url );
		$session->terminate();
		exit( 1 );
	}
}

# Check contact email for this eprint
my $contact_email = undef;
if( $session->get_repository->can_call( "email_for_doc_request" ) ) 
{
	$contact_email = $session->get_repository->call( "email_for_doc_request", $session, $eprint );
}
if( !defined( $contact_email ) )
{
	$session->render_error( $session->html_phrase( "request/error:no_contact" ),
		$eprint->get_url );
	$session->terminate();
	exit( 1 );
}

my $title = $session->html_phrase( "request/request_page:title" );
my $page = $session->make_doc_fragment();

my $email = $session->param( "email" );
if( defined( $email ) && $email ne "" )
{
	# Send request email
	my $subject = $session->phrase( "request/request_email:subject", eprint => $eprint->get_value( "title" ) );
	my $mail = $session->make_element( "mail" );
	$mail->appendChild($session->html_phrase(
		"request/request_email:body", 
		eprint => $eprint->render_citation_link,
		document => defined $doc ? $doc->render_citation_link : $session->make_doc_fragment,
		requester => $session->make_text( $email ) ) );

	my $result;
	my $user = EPrints::DataObj::User::user_with_email( $session, $contact_email );
	if( defined $user && defined $doc )
	{
		# Contact is registered user and EPrints holds requested document
		# Send email to contact with accept/reject links
		my $url =  $session->get_repository->get_conf( "perl_url" ) . 
			"/users/respond_doc?docid=" . $doc->get_id .
			"&email=" . EPrints::Utils::encode_str( $session->param( "email" ) );

		$mail->appendChild( $session->html_phrase( "request/request_email:links",
			accept => $session->render_link( "$url&action=accept" ),
			reject => $session->render_link( "$url&action=reject" ) ) );

		$result = EPrints::Utils::send_mail(
			session => $session,
			langid => $session->get_langid,
			to_name => EPrints::Utils::tree_to_utf8( $user->render_description ),
			to_email => $contact_email,
			subject => $subject,
			message => $mail,
			sig => $session->html_phrase( "mail_sig" ),
		);
	} 
	else
	{
		# Contact is non-registered user or EPrints holds no documents
		# Send email to contact with 'replyto'
		$result = EPrints::Utils::send_mail(
			session => $session,
			langid => $session->get_langid,
			to_name => defined $user ? EPrints::Utils::tree_to_utf8( $user->render_description ) : "",
			to_email => $contact_email,
			subject => $subject,
			message => $mail,
			sig => $session->html_phrase( "mail_sig" ),
			replyto_email => $email,
		);

	}

	my $tryagain = "?eprintid=" . $eprint->get_id;
	$tryagain .= "&docid=" . $doc->get_id if defined $doc;

	if( !$result )
	{
		$session->render_error( $session->html_phrase( "general:email_failed" ), $tryagain );
		$session->terminate();
		exit( 1 );
	}
	else
	{
		# Send acknowledgement to requester
		my $mail = $session->make_element( "mail" );
		$mail->appendChild( $session->html_phrase(
			"request/ack_email:body", 
			document => defined $doc ? $doc->render_citation : $session->make_doc_fragment,
			eprint	=> $eprint->render_citation_link ) );

		my $result = EPrints::Utils::send_mail(
			session => $session,
			langid => $session->get_langid,
			to_email => $email,
			subject => $session->phrase( "request/ack_email:subject", eprint=>$eprint->get_value( "title" ) ), 
			message => $mail,
			sig => $session->html_phrase( "mail_sig" )
		);

		if( !$result )
		{
			$session->render_error( $session->html_phrase( "general:email_failed" ), $tryagain );
			$session->terminate();
			exit( 1 );
		}

		# Render confirmation page
		$page->appendChild( $session->html_phrase( "request/ack_page",
			link => $session->render_link( $eprint->get_url ),
		) );
		$session->build_page( $title, $page );
		$session->send_page();
		$session->terminate();
		exit( 1 );
	}
}

# Render requested eprint/document
my $p = $session->make_element( "p" );
$page->appendChild( $p );
$p->appendChild( $eprint->render_citation );
if( defined $doc )
{
	my $p = $session->make_element( "p" );
	$page->appendChild( $p );
	$p->appendChild( $doc->render_citation );
}

# Render request form
my $form =  $session->render_form( "post" );
$page->appendChild( $form );
$form->appendChild( $session->html_phrase( "request/request_page:fieldname_email" ) );
$form->appendChild( $session->make_element( "input", type => "text", name => "email" ) );
$form->appendChild( $session->make_element( "br" ) );
$form->appendChild( $session->render_hidden_field( "eprintid", $eprint->get_id ) );
if( defined $doc )
{
	$form->appendChild( $session->render_hidden_field( "docid", $doc->get_id ) );
}
$form->appendChild( $session->make_element( "br" ) );
$form->appendChild( $session->render_action_buttons( submit => $session->phrase( "request/request_page:action_request" ) ) );

$session->build_page( $title, $page );
$session->send_page();

$session->terminate();
