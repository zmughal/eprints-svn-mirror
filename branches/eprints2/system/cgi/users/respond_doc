#!/usr/bin/perl -w -I/opt/eprints2/perl_lib

use EPrints::Session;
use EPrints::EPrint;
use EPrints::User;
use EPrints::Utils;
use LWP::MediaTypes qw( guess_media_type );
use MIME::Lite;
use strict;

my $session = new EPrints::Session();
exit( 1 ) unless( defined $session );

# Check parameters
my $eprintid = $session->param( "eprintid" );
error_page( $session, $session->html_phrase( "respond_doc/error" ) ) if !defined( $eprintid );
my $eprint = EPrints::EPrint->new( $session, $eprintid );
error_page( $session, $session->html_phrase( "respond_doc/error" ) ) if !defined( $eprint );
my $email = $session->param( "email" );
error_page( $session, $session->html_phrase( "respond_doc/error" ) ) if !defined( $email ) || $email eq "";

# Check user is authorised to respond
my $contact_email = undef;
if( $session->get_archive->can_call( "email_for_doc_request" ) )
{
	$contact_email = $session->get_archive->call( "email_for_doc_request", $session, $eprint );
}
error_page( $session, $session->html_phrase( "respond_doc/error:auth" ) ) if !defined( $contact_email ) || $session->current_user->get_value( "email" ) ne $contact_email;

# Check request
error_page( $session, $session->html_phrase( "respond_doc/error" ) ) if $eprint->get_value( "full_text_status" ) eq "public";

my $title = $session->html_phrase( "respond_doc/page:title" );
my $page = $session->make_doc_fragment();

my $action = $session->param("action");
$action = "reject" if $action ne "accept";

my $body = $session->param( "body" );
if( !defined( $body ) || $body eq "" )
{

	$page->appendChild( $session->html_phrase( "respond_doc/page:$action",
		eprint => $eprint->render_citation
	) );

	# Render response form
	my $form =  $session->render_form( "post" );
	$page->appendChild( $form );
	my $textarea = $session->make_element( "textarea", 
		name => "body",
		"accept-charset" => "utf-8",
		rows => 20,
		cols => 60,
		wrap => "virtual",
	);
	my $email_body = $session->html_phrase( "respond_doc/response:body_$action", 
		eprint	=> $session->make_text( EPrints::Utils::tree_to_utf8( $eprint->render_citation ) ),
		url	=> $session->make_text( $eprint->get_url ) );
	$textarea->appendChild( $email_body );
	$form->appendChild( $textarea );

	$form->appendChild( $session->make_element( "br" ) );
	$form->appendChild( $session->render_hidden_field( "eprintid", $eprintid ) );
	$form->appendChild( $session->render_hidden_field( "email", $email ) );
	$form->appendChild( $session->render_hidden_field( "action", $action ) );
	$form->appendChild( $session->render_action_buttons( submit => $session->phrase( "respond_doc/page:respond" ) ) );

	$session->build_page( $title, $page );
	$session->send_page();

	$session->terminate();
	exit( 0 );
}

my $subject = $session->phrase( "respond_doc/response:subject", eprint => $eprint->get_value( "title" ) );

my $mail = $session->make_element( "mail" );
$mail->appendChild( $session->make_text( $body ) );

my $result;
if( $action eq "accept")
{
	# Send acceptance notice with restricted documents attached
	my @restricted_docs;
	for ($eprint->get_all_documents) {
		push @restricted_docs, $_ if $_->get_value( "security" ) ne "";
	}

	$result = send_mail_with_attachments(
		$session->get_archive,
		$session->get_langid,
		"",
		$email,
		$subject,
		$mail,
		$session->html_phrase( "mail_sig" ),
		\@restricted_docs,
	);
}
else
{
	# Send rejection notice
	$result = EPrints::Utils::send_mail(
		$session->get_archive,
		$session->get_langid,
		"",
		$email,
		$subject,
		$mail,
		$session->html_phrase( "mail_sig" ),
	);
}

if( !$result )
{
	error_page( $session, $session->html_phrase( "respond_doc/error:email" ) );
}
else
{
	# Render confirmation page
	$page->appendChild( $session->html_phrase( "respond_doc/ack:$action" ) );
	$session->build_page( $title, $page );
	$session->send_page();
	$session->terminate();
	exit( 1 );
}

sub error_page
{
	my ( $session, $msg ) = @_;
	$session->render_error( $msg );
	$session->terminate();
	exit( 1 );
}


sub send_mail_with_attachments 
{
	my ($archive, $langid, $to_name, $to_address, $subject, $body, $sig, $attachments) = @_;

	my $smtphost = $archive->get_conf( 'smtp_server' );
	if( defined $smtphost )
	{
		MIME::Lite->send( 'smtp', $smtphost );
	} else {
		MIME::Lite->send( 'sendmail', $archive->invocation( "sendmail" ) ); 
	}

	# Build email header/body
	my $MAILWIDTH = 80;
	my $archivename = EPrints::Session::best_language( $archive, $langid, %{$archive->get_conf( "archivename" )} );
	my $adminemail = $archive->get_conf( "adminemail" );
	my $mime_msg = MIME::Lite->new(
		From => "\"$archivename\" <$adminemail>",
		To   => $to_address,
		Subject => "$archivename: $subject",
		Type => 'TEXT',
		Data => EPrints::Utils::tree_to_utf8( $body, $MAILWIDTH )->as_string . EPrints::Utils::tree_to_utf8( $sig, $MAILWIDTH )->as_string,
	) or return 0; 

	# Attach each document
	foreach my $doc ( @{$attachments} ) 
	{
		my %files = $doc->files;
		foreach my $file ( keys %files )
		{
			my $path = $doc->local_path . "/" . $file;
			my $type = guess_media_type( $path );
			$mime_msg->attach(
				Type => $type,
				Path => $path,
				Filename => $file,
			) or return 0;
		}
	}

	my $result;
	eval { 	$result = $mime_msg->send; };
	$result ? return 1 : return 0;

}
