=head1 EPrints Archive Configuration

This section describes all the configuration files in an single archive in the EPrints system.

=head2 Primary archive configuration file

Once you have created an EPrints archive the information you entered is placed
in an XML file in /opt/eprint2/archives/ with the name I<archiveid>.xml - this
file is documented later in this section.

=head2 Archive configuration directory

The bulk of the archive configuration is copied from /opt/eprints2/defaultcfg/ into the archives own configuration directory (usually /opt/eprints2/archives/I<archiveid>/cfg/ This directory will usually contain the following files and directories:

=over 8

=item B<apache.conf>

This file is generated by B<generate_apacheconf>. See the documentation of B<generate_apacheconf> for more information.

=item B<ArchiveConfig.pm>

The general configuration items which don't fit anywhere else are in this perl module. It is described fully later in this section of documentation. This module "requires" the other 5 perl modules. They are in seperate files to make them easier to get to grips with. 

=item B<ArchiveMetadataFieldsConfig.pm>

This module configures the metadata fields and the default values.

=item B<ArchiveOAIConfig.pm>

This module configures how the archive exports itself via the Open Archives protocol.

=item B<ArchiveRenderConfig.pm>

This module contains subroutines which handle rendering the data into XHTML (mostly) for display as webpages.

=item B<ArchiveTextIndexingConfig.pm>

This module handles turning UTF8 text strings into lists of index words for free text searches.

=item B<ArchiveValidateConfig.pm>

This module contains subroutines which check the metadata for problems.

=item B<auto-apache.conf>

This file is generated and overwritten by B<generate_apacheconf>. Do not edit it directly.  See the documentation of B<generate_apacheconf> for more information.
=item B<citations-I<languageid>.xml>

One of these files for each I<languageid> supported by this archive.
These XML files describe how to turn metadata for an item into a citation (with markup). They are described fully later in this section of documentation.

=item B<entities-I<languageid>.dtd>

One of these files for each I<languageid> supported by this archive. These DTD files are generated automaticly by B<generate_dtd> and should not be edited directly.

=item B<metadata-types.xml>

This XML file describes the various types of eprints, users etc. and which metadata fields are required or relevant to each. It is described fully later in this section of documentation.

=item B<phrases-I<languageid>.xml>

One of these files for each I<languageid> supported by this archive. These XML
files contain all the phrases which are specific to this archives such as the titles of metadata fields.  They are described fully later in this section of documentation.

=item B<ruler.xml>

This XML file just contains the horizontal divider used in webpages created by the system. It is described fully later in this section of documentation.

=item B<static/>

This directory contains the data needed to create the static webpages such as the homepage, and about page. It is described fully later in this section of documentation.

=item B<subjects>

This file contains the initial subjects for the system. It is described fully in the documentation for B<import_subjects>.

=item B<template-I<languageid>.xml>

One of these files for each I<languageid> supported by this archive. These XML/XHTML files describe the outline for webpages for this system.  They are described fully later in this section of documentation.

=back

=head1 XML Config Files in EPrints

This section contains some general information about the XML archive config files: template, phrases, ruler and citations. metadata-types.xml uses XML but these comments do not apply. 

=head2 XHTML

This files use HTML elements (and other elements too). XHTML is a fairly new version of HTML which is back compatable with HTML 4 but written using XML not SGML. This means that it is much stricter but less ambiguous and easier to parse and modify. Assuming you know HTML, the main differences are as follows:

=over 8

=item Tags must be closed

All elements must be closed, even ones such as E<lt>liE<gt>. Tags which do not have a close tag in HTML, like E<lt>brE<gt> or E<lt>img src="foo"E<gt> still must be closed eg. E<lt>img src="foo"E<gt>E<lt>/imgE<gt> - this can be abbreviated to the more neat looking:  E<lt>img src="foo" /E<gt>

=item All tags and attributes must be lower case

Self explanitary.

=item Strict definition of what tags may appear within which others.

Not actually checked by EPrints. It will let any rubbish past as long as it's valid XML. But that's no reason to be naughty. 

=back

So in summary, the HTML:

 <P><IMG SRC="http://piccy"></P>

should become in XHTML:

 <p><img src="http://piccy" /></p>

=head2 Language specific files.

phrases, template and citations have one instance per supported language. This allows the system to generate pages and emails in more than one language. Supporting a new language will require translating the all the english in the english config files currently shipped. If you do intend it do this (lots of work!) please get in touch with the eprints admin so that we can avoid duplicated effort.

=head2 Extra Entities

The XML files all use a DTD which defines a few extra entities. Entities are items in XML (or HTML) which start with "&" and end with ";" like &amp;. These additional entities come from the entities DTD file created by generate_entities. One DTD is created per language, although currently the only variation is the archive name.

=over 8

=item I<&archivename;>

The name of the archive in the current language.

=item I<&adminemail;>

The administrators email address.

=item I<&base_url;>

The base URL of the system (without a trailing slash)

=item I<&perl_url;>

The base URL of the CGI directory (without a trailing slash)

=item I<&frontpage;>

The URL of the system homepage.

=item I<&userhome;>

The URL of the user homepage.

=item I<&version;>

The current EPrints version.

=item I<&ruler;>

The XHTML of the standard divider.

=back

These entities are not available in the citations file.

=head2 Name Spaces and XHTML

These files contain a mixture of custom tags and XHTML. To keep these distinct the XML files contain a name space definition in the first element. The pratical upshot is that all EPrints own tags have the prefix "ep:". The namespace information is actually ignored by the current version of the eprints system.

example of mixed tags (and entities):

 <ep:phrase ref="lib/session:contact"><p>Feel free to contact <a href="mailto:&adminemail;">&archivename; administration</a> with details.</p></ep:phrase>

 eprints elements: phrase
 xhtml elements: p, a
 eprints entities: archiveemail, archivename

=head1 Primary archive configuration file

This XML file appears in the archives/ directory, usually /opt/eprints2/archives/, it describes the most very basic details about the archive. It is generated (and modified) by configure_archive and will not normally need to be edited.

EPrints looks in this directory for XML files and attempts to load them all
when starting the webserver.

This file should be chmod'd so that it can not be read by random users as it contains the database password.

The top level element is "archive" which has the attribute "id" which is the id of the archive. It should be the same as the filename. If this file is foo.xml then the id should be foo.

E<lt>archiveE<gt> contains a list of XML tags enclosing some text. eg.
  
  <host>stoatprints.org</host>

The following tags are expected in no special order:

=over 8

=item host

The hostname of this archive.

=item alias

This is optional and may be repeated. It has the attribute "redirect" which may be set to yes or no. This controls what virtual hosts are supported and if they  should redirect to the main (E<lt>hostE<gt>) one.

=item language 

The ISO id of a language supported by this archive. Repeatable. One of these should also be the defaultlanguage. See below.

=item port

The port number that the server is running on. Usually 80.

=item urlpath

The directory from the root of the server name. Usually /

=item archiveroot

The filesystem path of the rest of the archive configuration.

=item configmodule

The path to the perl module which does the main configuration (ArchiveConfig.pm)

=item dbname

The name of the MySQL database. Usually the same as the archive ID.

=item dbhost

The host on which MySQL is running. Usually localhost.

=item dbport 

An optional MySQL port, if it's not the standard one. Should be empty if we are to use the default.

=item dbsock

An optional MySQL socket. Should be empty if we are to use the default.
xx

=item dbuser

The username to use when connecting to MySQL, usually "eprints".

=item dbpass

The password to use to connect to MySQL.

=item defaultlanguage

One of the supported language. This is the default for this archive.

=item adminemail

The email address of the archive administrator. I strongly suggest that this is an alias rather than a personal email address. If all your webpages contain "bob@footle.edu" and bill takes over from bob you would have to regenerate every page with "bill@footle.edu". Much better to set up an email alias or forward from "archive-support@footle.edu" and point it at bob (for now). Heed these words spoken from grim experience!

=item archivename

The name of the archive. This has an attribute "language" the value of which is an iso language id. There should be one of these archivename elements per supported language. eg.

    <archivename language="en">White Lemur</archivename>
    <archivename language="fr">la archive d'Lemur Blanc</archivename>

(apologies to the french, human languages aren't my strong suit)

=back

=head1 ArchiveConfig.pm

cjg

=head1 ArchiveMetadataFieldsConfig.pm

cjg

=head1 ArchiveOAIConfig.pm

cjg

=head1 ArchiveRenderConfig.pm

cjg

=head1 ArchiveTextIndexingConfig.pm

cjg

=head1 ArchiveValidateConfig.pm

cjg

=head1 citations-I<languageid>.xml

cjg

=head1 metadata-types.xml

cjg

=head1 phrases-I<languageid>.xml

cjg

=head1 ruler.xml

cjg

=head1 The static/ directory

cjg

=head1 subjects

cjg

=head1 template-I<languageid>.xml

cjg


