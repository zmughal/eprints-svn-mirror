#!/usr/bin/perl -w -I/opt/eprints/perl_lib

######################################################################
#
# This command line script regenerates the subjects table.
# It should not be run on an active database, except to ADD
# a large number of tables, or to modify the "cosmetic" names 
# of subjects.
#
# WARNING. This will destroy any subjects which have been added
# by Staff via the web interface.
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use DBI;
use EPrints::Database;
use EPrints::Session;
use EPrints::Subject;
use strict;


my $session = new EPrints::Session( 1, $ARGV[0] );
exit( 1 ) unless( defined $session );

# Write the confirmation prompt
print "This script erases the subjects table and the rebuilds it from,\n";
print "cfg/subjects. It may cause problems if you remove subject ids\n";
print "which are used by papers already in the database.\n\n";
print "Are you sure you want this to happen? (yes/no)\n";

my $input = <STDIN>;
chomp( $input );

# We'll only work if they type "yes" exactly, otherwise we just abort.
unless( $input eq "yes" )
{
	print "Did not type \"yes\". ABORTED.\n";
	print "\n";
	$session->terminate();
	exit;
}

EPrints::Subject::remove_all( $session );

my $filename = $session->get_archive()->get_conf( "config_path" )."/subjects";
if( EPrints::Subject::create_subject_table( $session , $filename ) )
{
	print "Inserted subject categories\n";
}
else
{
	my $error = $session->{database}->error();
	print STDERR "DB Error: $error\n";
}

$session->terminate();

