#!/usr/bin/perl -w

######################################################################
#
# This command line script regenerates the subjects table.
# It should not be run on an active database, except to ADD
# a large number of tables, or to modify the "cosmetic" names 
# of subjects.
#
# WARNING. This will destroy any subjects which have been added
# by Staff via the web interface.
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use DBI;
use EPrints::Database;
use EPrints::Session;
use EPrints::Subject;
use strict;

# Write the confirmation prompt
print "This script erases the subjects table and the rebuilds it from,\n";
print "cfg/subjects. It may cause problems if you remove subject ids\n";
print "which are used by papers already in the database.\n\n";
print "Are you sure you want this to happen? (yes/no)\n";

my $input = <STDIN>;
chomp( $input );

# We'll only work if they type "yes" exactly, otherwise we just abort.
if( $input eq "yes" )
{

	my $session = new EPrints::Session( 1 );

	# Hose all entries in subject table:

	if( $session->{database}->remove( EPrints::Database::table_name( "subject" ),
	                                  "subjectid",
	                                  '%' ) )
	{
		print "Emptied subject table\n";
	}
	else 
	{
		my $error = $session->{database}->error();
		print STDERR "DB Error: $error\n";
	}

				


	if( EPrints::Subject::create_subject_table( $session ) )
	{
		print "Inserted subject categories\n";
	}
	else
	{
		my $error = $session->{database}->error();
		print STDERR "DB Error: $error\n";
	}

	$session->terminate();
} else {
	print "Did not type \"yes\". ABORTED.\n";
	print "\n";
}
