#!/usr/bin/perl -w -I/opt/eprints3/perl_lib

######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

=pod

=head1 NAME

B<send_alerts> - Send out all the email alerts for a given frequency.

=head1 SYNOPSIS

B<send_alerts> I<repository_id> I<frequency> [B<options>] 

=head1 DESCRIPTION

This script sends out all the alerts emails for the specified repository
and frequency. frequency must be one of daily|weekly|monthly.

This script should probably be called from your "cron" system, soon after
midnight. Something like:

 # 00:15 every morning
 15 0 * * * /opt/eprints3/bin/send_alerts dookuprints daily
 # 00:30 every sunday morning
 30 0 * * 0 /opt/eprints3/bin/send_alerts dookuprints weekly
 # 00:45 every first of the month
 45 0 1 * * /opt/eprints3/bin/send_alerts dookuprints monthly

Note the spacing out so that all 3 don't start at once and hammer the database.

=head1 ARGUMENTS

=over 8

=item B<repository_id> 

The ID of the eprint repository to use.

=item B<frequency> 

Which "frequency" of alerts to send - the daily, weekly or monthly ones.

=back

=head1 OPTIONS

=over 8

=item B<--help>

Print a brief help message and exit.

=item B<--man>

Print the full manual page and then exit.

=item B<--quiet>

Be vewwy vewwy quiet. This option will supress all output unless an error occurs.

=item B<--verbose>

Explain in detail what is going on.
May be repeated for greater effect.

=item B<--version>

Output version information and exit.

=back   

__GENERICPOD__

=cut

use EPrints;

use strict;
use Getopt::Long;
use Pod::Usage;

my $version = 0;
my $verbose = 0;
my $quiet = 0;
my $help = 0;
my $man = 0;

Getopt::Long::Configure("permute");

GetOptions( 
	'help|?' => \$help,
	'man' => \$man,
	'version' => \$version,
	'verbose+' => \$verbose,
	'silent' => \$quiet,
	'quiet' => \$quiet
) || pod2usage( 2 );
EPrints::Utils::cmd_version( "send_alerts" ) if $version;
pod2usage( 1 ) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;
pod2usage( 2 ) if( scalar @ARGV != 2 ); 

my $noise = 1;
$noise = 0 if( $quiet );
$noise = 1+$verbose if( $verbose );

# Set STDOUT to auto flush (without needing a \n)
$|=1;

my $session = new EPrints::Session( 1 , $ARGV[0] , $noise );
exit( 1 ) unless( defined $session );

EPrints::DataObj::SavedSearch::process_set( $session, $ARGV[1] );
EPrints::DataObj::User::process_editor_alerts( $session, $ARGV[1] );


$session->terminate();
exit;


