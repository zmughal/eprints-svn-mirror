######################################################################
#
#  Review Author's Documents in the Archive
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Database;
use EPrints::EPrint;
use EPrints::HTMLRender;
use EPrints::MetaField;
use EPrints::Session;
use EPrints::User;

use strict;

my $session = new EPrints::Session;
Apache::exit( 0 ) unless( defined $session );

# Check we have privs
if( !$session->auth_check( "deposit" ) )
{
	$session->terminate();
	Apache::exit( 0 );
}

my $page;
my $action = $session->get_action_button();
if( !defined $action )
{
	$page = make_form( $session );
}
else
{
	$page = process_form( $session, $action );
}	
}

$session->terminate();

#############################################################

sub make_form
{
	my( $session ) = @_;

	my $user = $session->current_user;

	# cjg. This should maybe extract stuff you can edit
	# not just stuff you deposited.

	my $ds = $session->get_archive()->get_dataset( "archive" );	
	my @eprints = $user->get_eprints( $ds );

	my $page = $session->make_doc_fragment();
	my $title = $session->phrase( "cgi/users/review:title" );

	if( scalar @eprints == 0 )
	{
		$page->appendChild( $session->html_phrase( 
			"cgi/users/review:no_docs" ) );

		$page->appendChild( $session->html_phrase( 
			"general:userhome_link" ) );

		$session->build_page( $title, $page );
		$session->send_page();
		return;
	}
	my $r_req = $session->get_archive()->get_conf( 
			"allow_user_removal_request" ); 

	$page->appendChild( $session->html_phrase( "cgi/users/review:blurb" ) );

	if( $r_req )
	{
		$page->appendChild( $session->html_phrase( 
			"cgi/users/review:remove_info" ) );
	}

	my( $form, $table, $tr, $td, $th );

	$form = $session->render_form( "post", "review" );
	$page->appendChild( $form );
	$table = $session->make_element( "table", border=>1, cellpadding=>3 );
	$form->appendChild( $table );

	$tr = $session->make_element( "tr" );
	$table->appendChild( $tr );
	$th = $session->make_element( "th" );
	$tr->appendChild( $th );
	$th->appendChild( $session->html_phrase( "cgi/users/review:document" ) );
	$th = $session->make_element( "th" );
	$tr->appendChild( $th );
	if( $r_req )
	{
		$th = $session->make_element( "th" );
		$tr->appendChild( $th );
	}
	
	my $eprint;
	foreach $eprint ( @eprints )
	{
		$tr = $session->make_element( "tr" );
		$table->appendChild( $tr );

		$td = $session->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( $eprint->render_citation_link() );

		$td = $session->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( $session->render_action_buttons(
			"clone_".$eprint->get_value( "eprintid" )=>
				$session->phrase( "cgi/users/review:clone" ) ) );

		if( $r_req )
		{
			$td = $session->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( $session->render_action_buttons(
				"remove_".$eprint->get_value( "eprintid" )=>
				$session->phrase( "cgi/users/review:req_remove" ) ) );

		}
	}

}

sub process_form
{
	my( $session, $action ) = @_;

	my $user = $session->current_user;
	my $page = $session->make_doc_fragment();
	my $title = $session->phrase( "cgi/users/review:title" );

	if( $action =~ m/^clone_(.+)$/ )
	{
		my $eprint = EPrints::EPrint->new( $session, undef, $1 );
		my $inbox_ds = $session->get_archive()->get_dataset( "inbox" );
		if( defined $eprint )
		{
			my $copy = $eprint->clone( $inbox_ds, 1 );
			if( defined $copy )
			{
				# Copied OK, redirect to workspace
				$session->redirect( "home" );
				$session->build_page( $title, $page );
				$session->send_page();
				return;
			}
		}
		$session->render_error(
			$session->html_phrase( "cgi/users/review:cant_clone" ) );
		return;
	}
	print STDERR "ACTION:$action\n";
}

#	# If submit is defined, must have been a removal request form that was
#	# filled out.
#	if( defined $session->{render}->param( "submit" ) )
#	{
#		$page_written = &handle_removal_request( $session, $user );
#	}
#	else
#	{
#		my $ep;
#
#		# They've clicked on something
#		foreach $ep (@eprints)
#		{
#			# See if they clicked a request removal button
#			# Sanity check: Make sure it's this user's item
#			if( $session->get_archive()->get_conf( "allow_user_removal_request" ) &&
#		   	 defined $session->{render}->param( "remove_$ep->{eprintid}" ) &&
#		   	 $ep->{username} eq $user->{username} )
#			{
#				&removal_request_form( $session, $ep );
#				$page_written = 1;
#			}
#		}
#	}


#######################################################################
##
## remove_request_form( $session, $eprint )
##
##  Display a removal request form.
##
#######################################################################
#
#sub removal_request_form
#{
#	my( $session, $eprint ) = @_;
#	
#	print $session->{render}->start_html( 
#		$session->{lang}->phrase( "cgi/users/review:remove_title" ) );
#	
#	print "<P><EM>";
#	print $session->{lang}->phrase( "cgi/users/review:remove_blurb" ) );
#	print "</EM></P>\n";
#	
#	print "<P>";
#	print $session->{lang}->phrase( "cgi/users/review:removing" ) );
#	print "</P>\n<P>";
#	print $session->{render}->render_eprint_citation( $eprint, 1, 1 );
#	print "</P>\n";
#
#	my $reason_field = new EPrints::MetaField(
#		"removal_reason:longtext:15:Reason for Requesting Removal:1:1:1" );
#	$reason_field->{help} = "Please enter the reason for your removal ".
#		"request in the box below. The request will be sent to the site ".
#		"administrator.";
#	
#	$session->{render}->render_input_form(
#		[ $reason_field ],
#		{},
#		0,
#		1,
#		[ 
#			$session->{lang}->phrase( "cgi/users/review:send_req" ),
#			$session->{lang}->phrase( "cgi/users/review:cancel" )
#		],
#		{ "eprint_id" => $eprint->{eprintid} } );
#	
#	print $session->{render}->end_html();
#}
#
#
#######################################################################
##
## $wrote_page = handle_removal_request( $session, $user )
##
##  Handle the POSTed information from a removal request form.
##
#######################################################################
#
#sub handle_removal_request
#{
#	my( $session, $user ) = @_;
#	
#	# Get the EPrint we're dealing with
#	my $eprintid = $session->{render}->param( "eprint_id" );
#
#	my $eprint = new EPrints::EPrint( $session,
#	                                  EPrints::Database::table_name( "archive" ),
#	                                  $eprintid ) if( defined $eprintid );
#
#	# Make sure it's valid, and the user's own EPrint
#	unless( defined $eprintid && defined $eprint &&
#	        $eprint->{username} eq $user->{username} )
#	{
#		$session->render_error(
#			$session->html_phrase( "cgi/users/review:cant_find_it" ),
#			"home",
#			$session->html_phrase( "cgi/users/review:deposit_page" ) );
#		return( 1 );
#	}
#	
#	if( $session->{render}->param( "submit") eq 
#		$session->{lang}->phrase( "cgi/users/review:send_req" ) 
#	{
#		my $msg = $session->{lang}->phrase( 
#			"cgi/users/review:remove_mail",
#			{ user=>$user->full_name(),
#			email=>$user->{email} } )."\n\n";
#		$msg .= $session->{render}->render_eprint_citation( $eprint, 0, 0 );
#		$msg .= "\n\n";
#		
#		my $reason = $session->{render}->param( "removal_reason" );
#
#		if( defined $reason && $reason ne "" )
#		{
#			$msg .= $session->{lang}->phrase( "cgi/users/review:reason" );
#			$msg .= "\n\n$reason\n\n";
#		}
#		else
#		{
#			$msg .= $session->{lang}->phrase( "cgi/users/review:no_reason" );
#		}
#		
#		$msg .= $session->{lang}->phrase( "cgi/users/review:visit_url" )."\n\n";
#			
#		$msg .= $session->get_archive()->get_conf( "server_perl_root" )."/staff/edit_eprint?".
#			"eprint_id=$eprint->{eprintid}";
#
#		$session->mail_administrator( #cjg MAIL IN ADMIN LANG
#			$session->{lang}->phrase( "cgi/users/review:remove_sub" ),
#			$msg );
#	}
#	return( 0 );
#}
#			
