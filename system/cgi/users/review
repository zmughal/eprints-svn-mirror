######################################################################
#
#  Review Author's Documents in the Archive
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Database;
use EPrints::EPrint;
use EPrints::MetaField;
use EPrints::Session;
use EPrints::User;

use strict;

my $session = new EPrints::Session;
Apache::exit( 0 ) unless( defined $session );

# Check we have privs
if( !$session->auth_check( "deposit" ) )
{
	$session->terminate();
	Apache::exit( 0 );
}

my $page;
my $action = $session->get_action_button();
if( !defined $action )
{
	$page = make_form( $session );
}
else
{
	$page = process_form( $session, $action );
}

$session->terminate();

#############################################################

sub make_form
{
	my( $session ) = @_;

	my $user = $session->current_user;

	# cjg. This should maybe extract stuff you can edit
	# not just stuff you deposited.

	my $ds = $session->get_archive()->get_dataset( "archive" );	
	my @eprints = $user->get_eprints( $ds );

	my $page = $session->make_doc_fragment();
	my $title = $session->html_phrase( "cgi/users/review:title" );

	if( scalar @eprints == 0 )
	{
		$page->appendChild( $session->html_phrase( 
			"cgi/users/review:no_docs" ) );

		$page->appendChild( $session->html_phrase( 
			"general:userhome_link" ) );

		$session->build_page( $title, $page );
		$session->send_page();
		return;
	}
	my $r_req = $session->get_archive()->get_conf( 
			"allow_user_removal_request" ); 

	$page->appendChild( $session->html_phrase( "cgi/users/review:blurb" ) );

	if( $r_req )
	{
		$page->appendChild( $session->html_phrase( 
			"cgi/users/review:remove_info" ) );
	}

	my( $form, $table, $tr, $td, $th );

	$form = $session->render_form( "post", "review" );
	$page->appendChild( $form );
	$table = $session->make_element( "table", border=>1, cellpadding=>3 );
	$form->appendChild( $table );

	$tr = $session->make_element( "tr" );
	$table->appendChild( $tr );
	$th = $session->make_element( "th" );
	$tr->appendChild( $th );
	$th->appendChild( $session->html_phrase( "cgi/users/review:document" ) );
	$th = $session->make_element( "th" );
	$tr->appendChild( $th );
	if( $r_req )
	{
		$th = $session->make_element( "th" );
		$tr->appendChild( $th );
	}
	
	my $eprint;
	foreach $eprint ( @eprints )
	{
		$tr = $session->make_element( "tr" );
		$table->appendChild( $tr );

		$td = $session->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( $eprint->render_citation_link() );

		$td = $session->make_element( "td" );
		$tr->appendChild( $td );
		$td->appendChild( $session->render_action_buttons(
			"clone_".$eprint->get_value( "eprintid" )=>
				$session->phrase( "cgi/users/review:clone" ) ) );

		if( $r_req )
		{
			$td = $session->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( $session->render_action_buttons(
				"remove_".$eprint->get_value( "eprintid" )=>
				$session->phrase( "cgi/users/review:req_remove" ) ) );

		}
	}
	$session->build_page( $title, $page );
	$session->send_page();
	return;

}

sub process_form
{
	my( $session, $action ) = @_;

	my $user = $session->current_user;
	my $ds = $session->get_archive()->get_dataset( "archive" );	

	if( $action =~ m/^clone_(.+)$/ )
	{
		my $eprint = EPrints::EPrint->new( $session, $1, $ds );
		my $inbox_ds = $session->get_archive()->get_dataset( "inbox" );
		if( defined $eprint )
		{
			my $copy = $eprint->clone( $inbox_ds, 1 );
			if( defined $copy )
			{
				# Copied OK, redirect to workspace
				$session->redirect( "home" );
				my $page = $session->make_doc_fragment();
				my $title = $session->html_phrase( "cgi/users/review:title" );
				$session->build_page( $title, $page );
				$session->send_page();
				return;
			}
		}
		$session->render_error(
			$session->html_phrase( "cgi/users/review:cant_clone" ) );
		return;
	}
	my $r_req = $session->get_archive()->get_conf( 
			"allow_user_removal_request" ); 

	if( $action=~ m/^remove_(.+)$/ && $r_req )
	{
		my $eprint = EPrints::EPrint->new( $session, $1, $ds );
		if( !defined $eprint )
		{
			$session->render_error(
				$session->html_phrase( "cgi/users/review:cant_find_it" ) );
			return;
		}		
		if( $user->is_owner( $eprint ) )
		{
			&removal_request_form( $session, $eprint );
			return;
		}
		$session->render_error(
			$session->html_phrase( "cgi/users/review:cant_remove" ) );
		return;
	}

	# If submit is defined, must have been a removal request form that was
	# filled out.
	if( $action eq "send" )
	{
		&handle_removal_request( $session, $user );
		return;
	}
		
	# no valid action or "cancel" from the remove request.
	&make_form( $session );
}



##
## remove_request_form( $session, $eprint )
##
##  Display a removal request form.
##

sub removal_request_form
{
	my( $session, $eprint ) = @_;

	my $title = $session->html_phrase( "cgi/users/review:remove_title" );
	my $page = $session->make_doc_fragment();

	$page->appendChild( $session->html_phrase( "cgi/users/review:remove_blurb",
		citation=>$eprint->render_citation_link() ) );

	my( $form, $table, $tr, $td, $th );


	my $reason_field = EPrints::MetaField->new(
		archive=> $session->get_archive(),
		confid=>'remove_request',
		name=>'reason',
		type=>'longtext',
		input_rows=>15 );

	$page->appendChild(
		$session->render_input_form(
			fields=>[ $reason_field ],
			show_help=>1,
			default_action=>"send",
			buttons=>{
				_order=> [ "send","cancel" ],
				send => $session->phrase( "cgi/users/review:send" ),
				cancel => $session->phrase( "cgi/users/review:cancel" )
			},
			hidden_fields=>{
				eprintid => $eprint->get_value( "eprintid" )
			},
			dest=>"review" ) );

	$session->build_page( $title, $page );
	$session->send_page();
	return;
}


##
## $wrote_page = handle_removal_request( $session, $user )
##
##  Handle the POSTed information from a removal request form.
##

sub handle_removal_request
{
	my( $session, $user ) = @_;
	
	# Get the EPrint we're dealing with
	my $ds = $session->get_archive()->get_dataset( "archive" );	

	my $eprint = EPrints::EPrint->new( 
		$session, 
		$session->param( "eprintid" ),
		$ds );
	if( !defined $eprint )
	{
		$session->render_error(
			$session->html_phrase( "cgi/users/review:cant_find_it" ) );
		return;
	}		
	if( !$user->is_owner( $eprint ) )
	{
		$session->render_error(
			$session->html_phrase( "cgi/users/review:cant_remove" ) );
		return;
	}

	my $reason = $session->param( "reason" );
	my $url = $session->get_archive()->get_conf( "perl_url" ).
		"/users/staff/edit_eprint?eprintid=".$eprint->get_value( "eprintid" );
	
	$session->mail_administrator( 	
		"cgi/users/review:remove_mail_subject",
		"cgi/users/review:remove_mail",
		citation=>$eprint->render_citation(),
		user=>$user->render_description(),
		email=>$user->render_value( "email" ),
		reason=>( EPrints::Utils::is_set( $reason ) ? $session->make_text( $reason ) 
			 : $session->html_phrase( "cgi/users/review:no_reason" ) ),
		url=>$session->make_text( $url ) );
	#cjg err sending mail check?

	my $title = $session->html_phrase( "cgi/users/review:remove_title" );
	my $page = $session->make_doc_fragment();
	$page->appendChild( $session->html_phrase( "cgi/users/review:done" ) );
	$page->appendChild( $session->html_phrase( "general:userhome_link" ) );
	$session->build_page( $title, $page );
	$session->send_page();
	
	return;
}
