######################################################################
#
#  Add, Remove and Edit a the subscriptions for the current user.
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::User;
use EPrints::Subscription;
use EPrints::Session;

my $session = new EPrints::Session;
Apache::exit( 0 ) unless( defined $session );

# Check we have privs
if( !$session->auth_check( "subscription" ) )
{
	$session->terminate();
	Apache::exit( 0 );
}

my $user = $session->current_user;
my $action = $session->get_action_button();
my $subs_ds = $session->get_archive->get_dataset( "subscription" );

# handle user response

if( $action eq "new" )
{
	my $newsub = EPrints::Subscription->create( $session, $user->get_id );
	edit_subscription( $session, $subs_ds, $user, $newsub );
} 
elsif( $action =~ /^edit_([0-9]+)$/ || $action eq "finish" )
{
	my $subid;
	if( $action eq "finish" )
	{
		$subid = $session->param( "subid" );
	}
	else
	{
		$subid = $1;
	}

	my $subscr = EPrints::Subscription->new( $session, $subid );
	if( !defined $subscr )
	{
		$session->get_archive->log( "Attempt by user #".
			$session->current_user->get_id." to edit ".
			"subscription #".$subid." which does not ".
			"exist." );
		&show_subscriptions( $session, $subs_ds, $user );
	}
	elsif( $subscr->get_value( "userid" ) != $user->get_id )
	{
		$session->get_archive->log( "Attempt by user #".
			$session->current_user->get_id." to edit ".
			"subscription #".$subid." which does does not ".
			"belong to them." );
		&show_subscriptions( $session, $subs_ds, $user );
	}
	else
	{
		if( $action eq "finish" )
		{
			$subscr->set_value( 
				"spec",
				$subs_ds->get_field( "spec" )->form_value(
					$session ) );
			$subscr->set_value( 
				"frequency",
				$subs_ds->get_field( "frequency" )->form_value(
					$session ) );
			$subscr->commit()
			&show_subscriptions( $session, $subs_ds, $user );
		}
		else
		{
			edit_subscription( $session, $subs_ds, $user, $subscr );
		}
	}
}
elsif( $action =~ /^finish$/ )
{
	my $subid = $session->param( "subid" );
}
elsif( $action =~ /^remove_([0-9]+)$/ )
{
	my $subscr = EPrints::Subscription->new( $session, $1 );
	if( !defined $subscr )
	{
		$session->get_archive->log( "Attempt by user #".
			$session->current_user->get_id." to remove ".
			"subscription #".$1." which does not ".
			"exist." );
	}
	elsif( $subscr->get_user->get_id == $session->current_user->get_id )
	{
		$subscr->remove;
	}
	else
	{
		$session->get_archive->log( "Attempt by user #".
			$session->current_user->get_id." to remove ".
			"subscription #".$subscr->get_id." owned by user ".
			"#".$subscr->get_user->get_id );
	}
	&show_subscriptions( $session, $subs_ds, $user );
}
else
{
	&show_subscriptions( $session, $subs_ds, $user );
}
$session->terminate();


sub show_subscriptions
{
	my( $session, $subs_ds, $user ) = @_;

	my $page = $session->make_doc_fragment;

	my $title = $session->html_phrase( "cgi/users/subscribe:list_title" );

	$page->appendChild( $session->html_phrase( 
		"cgi/users/subscribe:intro" ) );

	my @subs = $user->get_subscriptions;

	my( $form );
	$form = $session->render_form( "post", "subscribe" );	
	$page->appendChild( $form );

	if( scalar @subs == 0 )
	{
		$form->appendChild( $session->html_phrase( 
			"cgi/users/subscribe:no_subs" ) );
	}
	else
	{
		my( $table, $tr, $td, $th );
		$table = $session->make_element( 
			"table",
			style => "margin-bottom: 12pt",
			cellpadding => 4,
			border => 1 );
		$form->appendChild( $table );
		
		$tr = $session->make_element( "tr" );
		$table->appendChild( $tr );

		# 50% width on this column. Not very CSS.	
		$th = $session->make_element( 
			"th",
			width => '50%' );
		$tr->appendChild( $th );
		$th->appendChild( $session->make_text(
			$subs_ds->get_field( "spec" )->display_name( 
				$session ) ) );

		$th = $session->make_element( "th" );
		$tr->appendChild( $th );
		$th->appendChild( $session->make_text(
			$subs_ds->get_field( "frequency" )->display_name( 
				$session ) ) );
	
		$th = $session->make_element( "th" );
		$tr->appendChild( $th );
	
		foreach my $subscr ( @subs )
		{
			$tr = $session->make_element( "tr" );
			$table->appendChild( $tr );
		
			$td = $session->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( $subscr->render_value( "spec" ) );
	
			$td = $session->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( $subscr->render_value( 
				"frequency" ) );
	
			my $id = $subscr->get_id;
			my %buttons = (
				 _order => [ "edit_".$id, "remove_".$id ] );
			$buttons{"edit_".$id} = $session->phrase( 
				"cgi/users/subscribe:action_edit" );
			$buttons{"remove_".$id} = $session->phrase( 
				"cgi/users/subscribe:action_remove" );
			
			$td = $session->make_element( "td" );
			$tr->appendChild( $td );
			$td->appendChild( $session->render_action_buttons( 
				%buttons ) );
		}
		
	}

	$form->appendChild(
		$session->render_action_buttons( 	
			new => $session->phrase( 
				"cgi/users/subscribe:action_new" ) ) );
	
	$session->build_page( $title, $page, "subscribe_list"  );
	$session->send_page();
}

sub edit_subscription
{
	my( $session, $subs_ds, $user, $subscr ) = @_;

	my $page = $session->make_doc_fragment;

	my $title = $session->html_phrase( "cgi/users/subscribe:list_title" );

	$page->appendChild( $session->html_phrase( 
		"cgi/users/subscribe:edit_blurb" ) );

	$page->appendChild(
		$session->render_input_form( 
			fields => [
				$subs_ds->get_field( "spec" ),
				$subs_ds->get_field( "frequency" )
			],
			values => $subscr->get_data,
			show_names => 1,
			show_help => 1,
			hidden_fields => {
				subid => $subscr->get_value( "subid" ) } ,
			default_action => "finish",
			buttons => {
				cancel => $session->phrase( 
					"cgi/users/subscribe:action_cancel" ),
				finish => $session->phrase( 
					"cgi/users/subscribe:action_finish" )
			}
		) );
			
	
	$session->build_page( $title, $page, "subscribe_edit" );
	$session->send_page();
}
