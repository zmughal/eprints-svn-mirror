#!/usr/bin/perl -w

use strict;

use EPrints::Session;
use EPrints::User;

my $session = new EPrints::Session( 1 );

print STDERR "Reading users...\n";

my @records;

while( <> )
{
	chop();
	my ($username, $record) = split /=/;
	
	my @fieldvals = split /\|/, $record;
	
	my %user;

	$user{username} = $username;
	
	while( $#fieldvals >= 0 )
	{
		my $field = shift @fieldvals;
		my $value = shift @fieldvals;
		
		$user{$field} = $value;
	}

	push @records, \%user;
}

print STDERR "Importing users...\n";

my $count = 1;

my $rec;
foreach $rec (@records)
{
	print STDERR "User $rec->{username} ($count)\n";
	$count++;

	# Create the record
	my $user = EPrints::User->create_user( $session,
	                                       $rec->{username},
	                                       lc $rec->{email},
	                                       "Author" );


	my @copy_fields = qw( passwd status dept org country url );

	# Port over the straight-copy fields
	foreach (@copy_fields)
	{
		$user->{$_} = $rec->{$_};
	}
	
	# Date joined field

	# Convert dd/mm/yyyy to yyyy-mm-dd
	my ( $day, $month, $year ) = split /\//, $rec->{date};

	if( defined $day && defined $month && defined $year )
	{
		while( length $day < 2 )
		{
			$day = "0".$day;
		}

		while( length $month < 2 )
		{
			$month = "0".$month;
		}
		$user->{joined} = "$year-$month-$day";
	}
	else
	{
		$user->{joined} = "2000-01-01";
	}

	# Name field

	if( defined $rec->{fname} )
	{
		$user->{name} = &produce_name( $rec->{fname} );
	}
	
	
	# o/s field
	if( defined $rec->{os} )
	{
		$user->{os} = $rec->{os};
		$user->{os} = "UNIX" if( $user->{os} eq "Unix" );
		$user->{os} = "UNIX" if( $user->{os} eq "PDP-8" );
	}
	
	# Address field
	my $address = "";
	
	$address .= $rec->{add1}."\n" if( defined $rec->{add1} );
	$address .= $rec->{add2}."\n" if( defined $rec->{add2} );
	$address .= $rec->{city}."\n" if( defined $rec->{city} );
	$address .= $rec->{state}."\n" if( defined $rec->{state} );
	$address .= $rec->{zip}."\n" if( defined $rec->{zip} );

	$user->{address} = $address;

	$user->commit();	
}

print STDERR "Done\n";

$session->terminate();



sub produce_name
{
	my( $oldname ) = @_;
	
	return( undef ) if( !defined $oldname || $oldname eq "" );

	my @names = split /\s+/, $oldname;
	
	my $is_middle_bit = 0;

	# If there's more than one part to the name
	if( $#names >= 1 )
	{
		my @middle_bits = ( "van", "de", "von", "der" );
		
		my $possible_middle_bit = $names[$#names-1];
		
		foreach (@middle_bits)
		{
			$is_middle_bit = 1 if( (lc $_) eq (lc $possible_middle_bit) );
		}
	}
		
	my $firstnames = "";
	my $surname = "";
	my $i;

	if( $is_middle_bit )
	{
		$surname = $names[$#names-1]." ".$names[$#names];

		for( $i=0; $i<$#names-1; $i++ )
		{
			$firstnames .= " " if ($i>0);
			$firstnames .= $names[$i];
		}
	}
	else
	{
		$surname = $names[$#names];

		for( $i=0; $i<$#names; $i++ )
		{
			$firstnames .= " " if ($i>0);
			$firstnames .= $names[$i];
		}
	}

	return( ":$surname,$firstnames:" );
}
