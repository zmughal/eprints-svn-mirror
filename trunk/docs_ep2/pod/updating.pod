=pod

Generally speaking when upgrading EPrints v2 you should unpack and install eprints to the same path as your current version. The installer will detect the existing version and upgrade it. Existing files which have been altered by you should be automatically backed up so they don't get lost. But if your hacks are important then you should probably back them up by hand before upgrading.

Then you should follow the specific instructions for each stage from your old version to your new version...

=head1 Updating from EPrints 1

This path is not currently supported, as the software structure
underwent fundamental changes. We recommend that you do a clean install of EPrints 2.0.

We hope to provide an v1 to v2 "upgrade assister" at some point.



=head1 Updating from EPrints2-alpha-2 to EPrints 2.0

Too much of the configuration of the archive has changed to document individually. See
the C<CHANGELOG> file if you're really interested. If you have more than one
archive, then do each step for each one. Our example is the archive with the ID I<foobar>.

To upgrade we suggest you use the UNIX C<diff> command to make a records of changes 
you made to the archive config directory.

 % diff /opt/eprints2/defaultcfg/ /opt/eprints2/archives/foobar/cfg/

Store the output from diff somewhere safe.

Remove C</opt/eprints2/archives/foobar/cfg/>

Now install eprints 2.0 and agree to upgrade when it asks.

Copy the new default configuration into your archive dir:

 % cp -R /opt/eprints2/defaultcfg/ /opt/eprints2/archives/foobar/cfg/

Work through the "diff"  you produced, and re-apply the changes 
to the contents of C</opt/eprints2/archives/foobar/cfg/>.

You also need to execute the following SQL command.

 UPDATE document SET security='' WHERE security='public';

To connect to mysql via the command line run:

 % mysql -u eprints foobar -p

And enter the database password for that archive.

Now re-run C<generate_apacheconf> and restart apache.

Upgrading from 2.0 should be less painful than this, the config
files should change less dramatically from now on.



=head1 Updating from EPrints 2.0 to EPrints 2.0.1

This release is mostly a bug fix release. There are a few 
bugs in the config files which you should fix by hand. 

After upgrading EPrints, repeat these steps for the cfg
directory of each archive you have created:

=over 4

=item *

In C<citations-en.xml> in the citation for poster, the year field is incorrecly named &years; rename it to &year; 

=item *

(This is not essential) Also on the citations file for the "eprint" and "user" citation types: add a E<lt>ep:linkhereE<gt> .... E<lt>/ep:linkhereE<gt> just inside the E<lt>ep:citationE<gt> tag.

=item *

There was a bug in C<ArchiveFreeTextIndexingConfig.pm> which meant
that "return" was treated as part of a word, rather than a word break. Unless you have modifed that file, just
replace it with the new one from C</opt/eprints2/defaultcfg/>

=item *

(This is not essential) The title for the abstract block never gets added to the page. Edit C<ArchiveRenderConfig.pm> - search for eprint_fieldname_abstract and add the following line as the next line:

  $page->appendChild( $h2 );

=back


=head1 Updating from EPrints 2.0.1 to EPrints 2.1

These release fixes a few bugs but the main point is adding the subscriptions feature and support for OAI 2.0. See the NEWS file in the distribution for more information.

After upgrading EPrints, repeat these steps for each archive you have created:

=over 4

=item *

Upgrade the SQL tables - EPrints 2.1 needs to make some small changes to the database. Run:

 % bin/upgrade ARCHIVEID

This script will explain the changes it is making. It will require the MySQL root password.

If you want an extra level of protection, you may want to run mysqldump to backup the database.

=item *

If you are not using the OAI system then just copy the new ArchiveOAIConfig.pm configuration file over your old one. The new one can be found in /opt/eprints2/defaultcfg/ArchiveOAIConfig.pm.

If you have already configured the OAI system then you need to add the required configuration for OAI 2.0. These can be copied from /opt/eprints2/defaultcfg/ArchiveOAIConfig.pm. The two relevant sections are the block titled "OAI-PMH 2.0" and the subroutine C<make_metadata_oai_dc_oai2>. Copy these into your archives ArchiveOAIConfig.pm and modify them if needed.

=item *

Look at the section on setting up subscriptions in the "Installation" chapter.

You need to add some more items to the cron tab to mail out the subscriptions. One set of new cron entries per archive.

=item *

The call for EPrints::EPrint->new() has changed the order of the parameters
(to standardise it with Subject, User, etc.).

In ArchiveRenderConfig.pm edit:

        my $target = EPrints::EPrint->new( $session,
                $session->get_archive()->get_dataset( "archive" ),
                $eprint->get_value( "commentary" ) );

to be:

        my $target = EPrints::EPrint->new( $session,
                $eprint->get_value( "commentary" ),
                $session->get_archive()->get_dataset( "archive" ) ) ;

(swapping the order of the last 2 parameters)

=back

=head1 Updating from EPrints 2.1 (or 2.1.1) to EPrints 2.2

Upgrade eprints software to the new version then (for each archive)

=over 4

=item *

Upgrade the SQL tables - EPrints 2.2 needs to make some small changes to the database. Run:

 % bin/upgrade ARCHIVEID


=item cfg/ArchiveOAIConfig.pm

In the sub eprint_to_unqualified_dc change this line:

  push @dcdata, [ "creator", EPrints::Utils::tree_to_utf8( 
      EPrints::Utils::render_name( $session, $author, 0 ) ) ];

to this:

  push @dcdata, [ "creator", EPrints::Utils::make_name_string( $author ) ];

=item cfg/ArchiveRenderConfig.pm (optional)

You may wish to add the following to "eprint_render", after the commentary section. It will add 'type' to the abstracts page (although not unless you run generate_abstracts
  
 	$table->appendChild( _render_row(
 		$session,
 		$session->html_phrase( "eprint_fieldname_type" ),
 		$eprint->render_value( "type"  ) ) );

=item cfg/ArchiveRenderConfig.pm (optional)

You may wish to add subscriptions to the user_render_full method so staff can see what subscriptions a user has. Just before 

  	$info->appendChild( $table );

Add:
 
 	my @subs = $user->get_subscriptions;
 	my $subs_ds = $session->get_archive->get_dataset( "subscription" );
 	foreach my $subscr ( @subs )
 	{
 		my $rowright = $session->make_doc_fragment;
 		foreach( "frequency","spec","mailempty" )
 		{
 			my $strong;
 			$strong = $session->make_element( "strong" );
 			$strong->appendChild( $session->make_text( 
				$subs_ds->get_field( $_ )->display_name( $session ) ) );
 			$strong->appendChild( $session->make_text( ": " ) );
 			$rowright->appendChild( $strong );
 			$rowright->appendChild( $subscr->render_value( $_ ) );
 			$rowright->appendChild( $session->make_element( "br" ) );
 		}
 		$table->appendChild( _render_row(
 			$session,
 			$session->html_phrase(
 				"page:subscription" ),
 			$rowright ) );
 				
 	}

=item Subject Editors (optional)

If you want to add the feature which allows the editor to set a search which limits the scope of what an editor may edit (eg. only books, or only things under oceanography in the subject table) you must add in metadata-types.xml ...

To the end of E<lt>type name="editor"E<gt>

    <field name="editperms" staffonly="yes" />
    <field name="frequency" required="yes" />
    <field name="mailempty" required="yes" />

And to the end of E<lt>type name="admin"E<gt>

    <field name="editperms" />
    <field name="frequency" required="yes" />
    <field name="mailempty" required="yes" />

And then to ArchiveConfig.pm add (near "subscription fields" )

 # Fields used for limiting the scope of editors
 $c->{editor_limit_fields} =
 [
         "subjects",
         "type"
 ];

=item Translated Phrase Files (non-english archives only)

There is a tool in http://software.eprints.org/files/contrib/update_phrases/ which will assist with identifying changes made in the English version which should be applied to your translated version(s).

=item Rehash Documents

If you want to use the "probity" feature (see elsewhere in documentation for more information) you should run the rehash_documents command to generate a hash of each document file in the system.

=back
