AC_INIT()

VERSION=1.0

DIST_PATH=`pwd`
INSTALL_USER=eprints
INSTALL_GROUP=eprints
VIRTUALHOST=

PERL_SEARCH_PATH="$PATH:/usr/local/bin:/opt/perl/bin:/opt/PERL/bin"
AC_ARG_WITH(perl,
    [ --with-perl=[PATH]       path of perl interpreter ],
    [
        AC_MSG_CHECKING([perl interpreter])
        PERL_PATH=$withval
        if test -x $PERL_PATH ; then
            AC_MSG_RESULT($PERL_PATH)
        else
            AC_MSG_ERROR(Perl interpreter specified does not appear to exist)
        fi
    ],
    [
        AC_PATH_PROG(PERL_PATH, perl, "NOTFOUND", $PERL_SEARCH_PATH)
        if test $PERL_PATH = NOTFOUND ; then
            AC_MSG_ERROR(Unable to find perl interpreter)
        fi
    ]
)

AC_MSG_CHECKING([whether the perl interpreter ($PERL_PATH ) runs])
if $PERL_PATH -e "" > /dev/null 2>&1 ; then
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Perl interpreter does not appear to run)
fi

AC_MSG_CHECKING([whether the perl interpreter ($PERL_PATH ) works])
if $PERL_PATH -e " print(\"INSERT PERL TEST HERE\")" > /dev/null 2>&1 ; then
    AC_MSG_RESULT(yes)
else
    AC_MSG_RESULT(no)
    AC_MSG_ERROR(Perl interpreter does not appear to work)
fi

AC_ARG_WITH(user,
    [ --with-user=[USER]       install eprints to run as USER ],
    [
        INSTALL_USER=$withval
    ])

AC_ARG_WITH(group,
    [ --with-group=[GROUP]     install eprints to run as GROUP ],
    [
        INSTALL_GROUP=$withval
    ])

AC_ARG_WITH(virtualhost,
    [ --with-virtualhost=[VIRTUALHOST]    
                          use VIRTUALHOST rather than "*" for
                          apache VirtualHost directives. ],
    [
        VIRTUALHOST=$withval
    ])

DISABLE_DF="0"
AC_ARG_ENABLE(diskfree,
    [ --disable-diskfree       disable disk free space calls],
    [
        if test $enableval = no ; then
            DISABLE_DF="1"
        fi
    ])

if test $DISABLE_DF = "0" ; then
    AC_MSG_CHECKING([what perl function to use for disk free check])
    DF_FUNC=`$PERL_PATH df-check.pl`
    AC_MSG_RESULT($DF_FUNC)
    if test $DF_FUNC = "none" ; then
        AC_PATH_PROG(H2PH_PATH, h2ph, "NOTFOUND", $PERL_SEARCH_PATH)
        if test $H2PH_PATH = "NOTFOUND" ; then
            H2PH_PATH=h2ph
        fi
        echo "**************************************************************"
        echo "*** Unable to find a way to check for free disk space in perl."
        echo "*** Free space checking function disabled. To supress this"
        echo "*** message, re-run configure with the --disable-diskfree"
        echo "*** option."
        echo "*** If you require free space checking, the necessary"
        echo "*** functionality can be enabled by running the perl"
        echo "*** tool \"h2ph\" in /usr/include, as root:"
        echo "***     cd /usr/include"
        echo "***     $H2PH_PATH * */*"
        echo "**************************************************************"
    fi
fi

dnl This is the path that we search for tools

TOOL_PATH="$PATH:/usr/local/bin:/sbin:/usr/sbin:/usr/X11R6/bin"
AC_ARG_WITH(toolpath,
    [ --with-toolpath=[PATH]   search path for tool programs ],
    [
        TOOL_PATH=$withval
    ])

AC_PATH_PROG(UNZIP_PATH, unzip, "NOTFOUND", $TOOL_PATH)
if test $UNZIP_PATH = "NOTFOUND"; then
    echo "**************************************************************"
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "**************************************************************"
    AC_MSG_WARN([Unable to find unzip])
fi

AC_PATH_PROG(TAR_PATH, tar, "NOTFOUND", $TOOL_PATH)
if test $TAR_PATH = "NOTFOUND"; then
    echo "**************************************************************"
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "**************************************************************"
    AC_MSG_WARN([Unable to find tar])
fi

AC_PATH_PROG(GUNZIP_PATH, gunzip, "NOTFOUND", $TOOL_PATH)
if test $GUNZIP_PATH = "NOTFOUND"; then
    echo "**************************************************************"
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "**************************************************************"
    AC_MSG_WARN([Unable to find gunzip, the GNU unzip tool])
fi

AC_PATH_PROG(WGET_PATH, wget, "NOTFOUND", $TOOL_PATH)
if test $WGET_PATH = "NOTFOUND"; then
    echo "**************************************************************"
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "**************************************************************"
    AC_MSG_WARN([Unable to find wget])
fi

AC_PATH_PROG(SENDMAIL_PATH, sendmail, "NOTFOUND", $TOOL_PATH)
if test $SENDMAIL_PATH = "NOTFOUND"; then
    echo "**************************************************************"
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "**************************************************************"
    AC_MSG_WARN([Unable to find sendmail])
fi



AC_PATH_PROG(LATEX_PATH, latex, "NOTFOUND", $TOOL_PATH)
if test $LATEX_PATH = "NOTFOUND"; then
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "***"
    echo "*** DON'T PANIC. This tool is not used by a core feature."
    AC_MSG_WARN([Unable to find latex])
fi

AC_PATH_PROG(DVIPS_PATH, dvips, "NOTFOUND", $TOOL_PATH)
if test $DVIPS_PATH = "NOTFOUND"; then
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "***"
    echo "*** DON'T PANIC. This tool is not used by a core feature."
    AC_MSG_WARN([Unable to find dvips, for latex])
fi

AC_PATH_PROG(CONVERT_PATH, convert, "NOTFOUND", $TOOL_PATH)
if test $CONVERT_PATH = "NOTFOUND"; then
    echo "*** Unable to find the location of one of the tools required"
    echo "*** by eprints. Try running this script again giving the"
    echo "*** --with-toolpath options to give a colon separated path"
    echo "*** where the tools can be found"
    echo "***"
    echo "*** eprints configure will now continue, but some features may"
    echo "*** not work unless this is resolved"
    echo "***"
    echo "*** DON'T PANIC. This tool is not used by a core feature."
    AC_MSG_WARN([Unable to find convert, the ImageMagick tool])
fi

CHECK_PERL_MOD(Apache::Constants)
CHECK_PERL_MOD(Apache::Registry)
CHECK_PERL_MOD(Apache)
CHECK_PERL_MOD(CGI)
CHECK_PERL_MOD(Carp)
CHECK_PERL_MOD(Config)
CHECK_PERL_MOD(Cwd)
CHECK_PERL_MOD(Data::Dumper)
CHECK_PERL_MOD(Exporter)
CHECK_PERL_MOD(File::Basename)
CHECK_PERL_MOD(File::Copy)
CHECK_PERL_MOD(File::Find)
CHECK_PERL_MOD(File::Path)
CHECK_PERL_MOD(Getopt::Long)
CHECK_PERL_MOD(MIME::Base64)
CHECK_PERL_MOD(Pod::Usage)
CHECK_PERL_MOD(Sys::Hostname)
CHECK_PERL_MOD(Unicode::String)
CHECK_PERL_MOD(XML::Parser)

TEST_PERL_MOD(GDOME_AVAILABLE, XML::GDOME)
ENABLE_GDOME="0"
AC_ARG_ENABLE(gdome,
    [ --enable-gdome           use the XML::GDOME module],
    [
        if test $enableval = yes ; then
            ENABLE_GDOME="1"
        fi
    ])

if test $GDOME_AVAILABLE = "1"; then
    echo "Found XML::GDOME module. Lovely. We'll use that then!"
    ENABLE_GDOME="1"
else
    if test $ENABLE_GDOME = "1"; then 
        AC_MSG_ERROR(Can't find GDOME, but you asked to enable it)
    else
        echo "Didn't find XML::GDOME module. We'll make do with XML::DOM then."
    fi
    ENABLE_GDOME="0"
fi

AC_PREFIX_DEFAULT(/opt/eprints2)

PREFIX=$prefix
if test $PREFIX = "NONE" ; then
    PREFIX=/opt/eprints2
fi

AC_SUBST(PERL_PATH)
AC_SUBST(DIST_PATH)
AC_SUBST(PREFIX)
AC_SUBST(DISABLE_DF)
AC_SUBST(ENABLE_GDOME)
AC_SUBST(INSTALL_USER)
AC_SUBST(INSTALL_GROUP)
AC_SUBST(VIRTUALHOST)

AC_OUTPUT([
        install.pl
])

chmod +x install.pl
