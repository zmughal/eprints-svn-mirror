#!/usr/bin/perl -w -I/opt/eprints3/perl_lib

=pod

=head1 NAME

B<add_field> - add the database tables for a configured field

=head1 SYNOPSIS

B<add_field> - I<repository_id> I<dataset> I<field_name> [B<options>]

=head1 DESCRIPTION

This utility tool will create the database tables for a configured eprint field.

=head1 ARGUMENTS

=over 8

=item B<repository_id> 

The ID of the EPrint repository to search.

=item B<dataset>

One of eprint, document or user.

=item B<field_name> 

The name of the field to add.

=back

=head1 OPTIONS

=over 8

=item B<--force>

Don't confirm changes.

=item B<--help>

Print a brief help message and exit.

=item B<--man>

Print the full manual page and then exit.

=item B<--quiet>

This option does not do anything.

=item B<--verbose>

Explain in detail what is going on. May be repeated for greater effect.

=item B<--version>

Output version information and exit.

=back

=cut

use strict;
use warnings;

use EPrints;
use Getopt::Long;
use Pod::Usage;

my $version = 0;
my $verbose = 0;
my $quiet = 0;
my $help = 0;
my $man = 0;
my $dryrun = 0;
my $force = 0;

GetOptions( 
	'help|?' => \$help,
	'man' => \$man,
	'version' => \$version,
	'verbose+' => \$verbose,
	'silent' => \$quiet,
	'quiet' => \$quiet,
	'force' => \$force,
	'dry-run' => \$dryrun
) || pod2usage( 2 );
EPrints::Utils::cmd_version( "lift_embargos" ) if $version;
pod2usage( 1 ) if $help;
pod2usage( -exitstatus => 0, -verbose => 2 ) if $man;
pod2usage( 2 ) if( scalar @ARGV != 3 ); 

our $noise = 1;
$noise = 0 if( $quiet );
$noise = 1+$verbose if( $verbose );

# Set STDOUT to auto flush (without needing a \n)
$|=1;

my( $repositoryid, $datasetid, $fieldid ) = @ARGV;

my $session = new EPrints::Session( 1 , $repositoryid , $noise );
exit( 1 ) unless( defined $session );

my $database = $session->{ database };

my $fields = $session->get_repository->get_conf( "fields" );

if( !$force && !exists( $fields->{ $datasetid } ) )
{
	pod2usage( "$datasetid is not a valid dataset id, should be one of: " . join(',', keys %$fields) );
}

my $dataset = $session->get_repository->get_dataset( $datasetid );

if( !$dataset->has_field( $fieldid ) )
{
	pod2usage( "$fieldid is not a configured field in the $datasetid dataset - you need to add the field to your configuration file(s) before running this utility" );
}

my $field = $dataset->get_field( $fieldid );

unless( $force )
{
	my $confirm = EPrints::Utils::get_input_confirm( "Are you sure you want to add the database tables for " . $field->get_name . "?" );
	exit(0) unless $confirm;
}

$database->add_field( $dataset, $field );

$session->terminate();
