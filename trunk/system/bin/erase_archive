#!/usr/bin/perl -w

######################################################################
#
#  Erase the archive.
#
#   This script completely erases the archive contents, including all
#   database tables and eprint files.  After running this, the metadata
#   configuration can be safely updated and the create_databases
#   script run again.
#
#   This script asks for confirmation before actually erasing anything.
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################


## NEEDS A SESSION, eh?

use EPrints::Database;

use strict;

my $session = new EPrints::Session( 1 , $ARGV[0] );
exit unless( defined $session );

my $local_document_root = $session->getSite()->getConf( "local_document_root" );
my $database = $session->getSite()->getConf( "db_name" );

$session->terminate();


# This script dosn't currently work on remote machines, which may well
# not allow remote admin log in anyway.


# make this work dammit cjg
#if ( defined $db_host ||
     #defined $EPrintSite::SiteInfo::db_socket ||
     #defined $EPrintSite::SiteInfo::db_port ) 
#{
	#print "\n";
	#print "This script currently does not work with databases\n";
	#print "not running on the default port of localhost.\n";
	#print "\n";
	#exit;
#}


# Write the confirmation prompt
print "This script completely erases the archive, including all metadata,\n";
print "database tables and eprint files.\n\n";
print "Are you sure you want this to happen? (yes/no)\n";

my $input = <STDIN>;
chomp( $input );

# We'll only work if they type "yes" exactly, otherwise we just abort.
if( $input eq "yes" )
{
	# First erase the database tables. We now do this the dramatic way
	# of dropping and recreating the database.
	# This makes it possible to erase a really broken setup.

	# Get the path of the mysql monitor tool
	print "Path of mysqladmin tool (the default is fine if it's in your standard shell path)\n";
	print "[mysqladmin]: ";


	my $mysqladmin_path = <STDIN>;
	chomp( $mysqladmin_path );
	$mysqladmin_path = "mysqladmin" if( $mysqladmin_path eq "" );

	print "Dropping and recreating database (requires database root password)\n";
	print "You will need to enter the MySQL root user password.\n";

	my $cmds = "drop $database";
	$cmds.= " create $database";

	# We use the force -f option as we've already checked user meant to do this.
	my $rc = 0xffff & system( "$mysqladmin_path -u root -f $cmds" );

	print "Erasing eprint files...\n";
	
	# Get available directories
	opendir DOCSTORE, $local_document_root
		or print STDERR "Can't open DOCSTORE";

	# The grep here just removes the "." and ".." directories
	my @avail = grep !/^\.\.?$/, readdir DOCSTORE;
	closedir DOCSTORE;

	# Remove the contents of each of the directories.
	foreach (@avail)
	{
		$rc = 0xffff & system(
			"rm -rf $local_document_root/$_/*" );
		print STDERR "Warning: Cleaning $local_document_root/$_ didn't go smoothly\n"
			unless( $rc==0 );
	}

	print "Done.\n";
}
