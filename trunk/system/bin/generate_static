#!/usr/bin/perl -w -I/opt/eprints/perl_lib

######################################################################
#
#  Generate static pages using site template.
#
#   This trawls through local_root/static. Every HTML file is given
#   the site frame and written to htdocs_path. HTML files that
#   already have the full <HTML> .. </HTML> gubbins are left as-is.
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Session;

#cjg Nice Command Options
#cjg man page
use File::Copy;
use File::Find;
use strict;

my $session = new EPrints::Session( 1 , $ARGV[0] );
exit( 1 ) unless( defined $session );

# change to base of site so expat can find the dtd directory. cjg (still needed???)
chdir( $session->get_archive()->get_conf( "archiveroot" ) );

my $langid;
my $generalpath = $session->get_archive()->get_conf( "static_path" )."/general";
my $errcnt = 0;
foreach $langid ( @{$session->get_archive()->get_conf( "languages" )} )
{
	#print $langid."\n";
	my $basepath = $session->get_archive()->get_conf( "static_path" ).
	               "/$langid";
	my $func;
	$func = sub { generate_static( $langid, $basepath, $session, \$errcnt ) };
	find( { wanted=>$func, follow=>1 }, $basepath );
	$func = sub { generate_static( $langid, $generalpath, $session, \$errcnt ) };
	find( { wanted=>$func, follow=>1 }, $generalpath );
}
if( $errcnt )
{
	print "Errors Encountered: $errcnt\n";
}
exit;


$session->terminate();
	

sub generate_static
{
	my( $langid , $basepath , $session, $errcnt ) = @_;
	# Ignore CVS directories
	return if( $File::Find::name =~ /\/CVS/ );
	$session->change_lang( $langid );

	my $destination_filename = $File::Find::name;

	my $newpath = $session->get_archive()->get_conf( "htdocs_path" ).
	              "/$langid";
	$destination_filename =~ s/$basepath/$newpath/;

#cjg cmd line flag for verbose/quiet?
#print STDERR "$File::Find::name -> $destination_filename\n";
	
	if( -d $File::Find::name )
	{
		# If it's a directory, just make sure it exists in the destination.
		unless( -e $destination_filename )
		{
			print "mkdir $destination_filename\n";
			mkdir( $destination_filename, 0775 )
				or die "Can't make directory $destination_filename: $!\n";
		}
	}
	else
	{
		# Is this is an HTML template file?
		if( $destination_filename =~ m/\.x(html|page)$/ )
		{
			my $mode = $1;
			$destination_filename =~ s/\.x(html|page)$/.html/;

			my $doc = $session->get_archive()->parse_xml(
						$File::Find::name );

			if( !defined $doc )
			{
				print STDERR "Could not load file: $File::Find::name\n";
				$$errcnt++;
				return;
			}
			my $page = ($doc->getElementsByTagName( $mode ))[0];
			if( !defined $page )
			{
				print STDERR "Error: no $mode element in ".$File::Find::name."\n";
				$$errcnt++;
				return;
			}

			$doc->removeChild( $page );
			$session->new_page();
			$session->take_ownership( $page );
			$doc->dispose();

			if( $mode eq "page" )
			{
				my $title = 
				   ($page->getElementsByTagName( "title" ))[0];
				if( !$title )
				{
					print STDERR "Error: no title element in ".$File::Find::name."\n";
					$page->dispose();
					$$errcnt++;
					return;
				}
				my $titletext = "";
				my $kid;
				foreach $kid ( $title->getChildNodes )
				{
					$titletext .= $kid->toString();	
				}
				
				my $main = 
				   ($page->getElementsByTagName( "body" ))[0];
				if( !defined $main )
				{
					print STDERR "Error: no main element in ".$File::Find::name."\n";
					$page->dispose();
					$$errcnt++;
					return;
				}
				$page->removeChild( $main );
				$session->build_page( $titletext, $main );
				$page->dispose();
			}
			else 	# $mode is "html"
			{
				$session->set_page( $page );	
			}	
			$session->page_to_file( $destination_filename );

		}
		else
		{
			# Just need to copy the file verbatim
			File::Copy::copy( $File::Find::name, $destination_filename ) or
				print STDERR "Couldn't copy $File::Find::name to $destination_filename: $!\n";
		}
	}
}
