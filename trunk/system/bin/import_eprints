#!/usr/bin/perl -w -I/opt/eprints/perl_lib

######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Session;
use EPrints::ImportXML;
use EPrints::EPrint;
use strict;
if( scalar @ARGV != 2 )
{
	print STDERR "import_xml <siteid> <xmlfilename>\n";
	exit( 1 );
}
#cjg Nice Command Options
#cjg man page

# Set STDOUT to auto flush (without needing a \n)
$|=1;

my $session = new EPrints::Session( 1 , $ARGV[0] );
exit( 1 ) unless( defined $session );

# Using a local so it appears in subroutines. Normally I would
# try and avoid doing this.
my $info =  { 
	update_abstracts => [],
	ds => $session->get_archive()->get_dataset( "archive" ) 
};

EPrints::ImportXML::import_file( $session , $ARGV[1] , \&deal, $info );


# Update all the abstract pages of these records and any which
# they impact (later versions etc)
my %done = ();
foreach( @{$info->{update_abstracts}} )
{
	next if( $done{$_} );
	my $eprint = EPrints::EPrint->new( $session, $info->{ds}, $_ );
	$eprint->generate_static();
	$done{$_} = 1;
}
	
$session->terminate();

exit;

sub deal 
{
	my( $session , $table , $eprint, $info ) = @_;

	#print EPrints::Session::render_struct( $eprint );
	#print "___________________\n";
	#print EPrints::Session::render_struct( $info );
	#print "end\n";
	#print $session->{render}->render_eprint_citation( $eprint, 0, 0)."\n";
	#print "------------\n";

	$eprint->set_value( "subjects" , ["blgc-bchm"] );
	$eprint->set_value( "eprinttype" , "other" );
	$eprint->datestamp();
	if( $session->get_db()->exists( $info->{ds} , $eprint->get_value( "eprintid" ) ) )
	{
		print  "EXISTS!\n";
		$eprint->commit;
	}
	else 
	{
		print  "NOT EXISTS!\n";
		#cjg needs a userid
		$eprint = EPrints::EPrint::create( $session, $info->{ds}, undef, $eprint->get_data() );
	}
	foreach( $eprint->get_all_related() )
	{
		push @{$info->{update_abstracts}}, $_->get_value( "eprintid" );
	}
	push @{$info->{update_abstracts}}, $eprint->get_value( "eprintid" );
}

