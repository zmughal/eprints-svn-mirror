######################################################################
#
#  Confirm Password or Email Change
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints;

use strict;

my $handle = new EPrints::Handle;
exit( 0 ) unless( defined $handle );

my( $title, $page ) = make_confirm_page( $handle );

$handle->build_page( $title, $page, "confirm" );
$handle->send_page();
$handle->terminate();


sub make_confirm_page
{
	my( $handle ) = @_;

	my $page = $handle->make_doc_fragment;

	my $user_ds = $handle->get_repository->get_dataset( "user" );

	if( !$handle->have_parameters() )
	{
		$page->appendChild( $handle->html_phrase( "general:bad_param" ) );
		return( $handle->html_phrase( "cgi/confirm:err_title" ) , $page );
	}

	# Process the form.
	my $userid = $handle->param( "userid" )+0;
	my $pin = $handle->param( "pin" );

	my $user = new EPrints::User( $handle, $userid );

	if( !defined $user )
	{
		$page->appendChild( $handle->html_phrase( "cgi/confirm:bad_user" ) );
		return( $handle->html_phrase( "cgi/confirm:err_title" ) , $page );
	}

	my $userpin = $user->get_value( "pin" );
	my $pinsettime = $user->get_value( "pinsettime" );
	my $delta = (time - $pinsettime);

	if( !defined $userpin )
	{
		$page->appendChild( $handle->html_phrase( "cgi/confirm:no_pin" ) );
		return( $handle->html_phrase( "cgi/confirm:err_title" ) , $page );
	}
	if( $userpin ne $pin)
	{
		$page->appendChild( $handle->html_phrase( "cgi/confirm:pin_mismatch" ) );
		return( $handle->html_phrase( "cgi/confirm:err_title" ) , $page );
	}
	my $maxdelta = $handle->get_repository->get_conf( "pin_timeout" );
	if( ( $maxdelta != 0 ) && ( $maxdelta * 60 * 60 < $delta ) )
	{
		$page->appendChild( $handle->html_phrase( "cgi/confirm:pin_timeout" ) );
		return( $handle->html_phrase( "cgi/confirm:err_title" ) , $page );
	}

	# Only ONE of these should be set, as the two set_* scripts should zero the
	# other value when they set theirs.

	# This script hacks the SQL directly, as normally "secret" fields are not
	# accessable to eprints. 
	
	if( $user->is_set( "newemail" ) )
	{
		$page->appendChild( $handle->html_phrase( 
			"cgi/confirm:set_email",
			newemail=>$handle->make_text( $user->get_value( "newemail" ) ) ) );
		# check no one else has this email! cjg
		$user->set_value( "email", $user->get_value( "newemail" ) );
		$user->set_value( "newemail", undef );
		$user->set_value( "pin", undef );
		if( $user->has_priv( "lock-username-to-email" ) )# cjg change to new system
		{
			# shim the username in the current user object
			$user->set_value( "username", $user->get_value( "email" ) );
		}
		# write the changes
		$user->commit();
	} 
	else
	{
		# Must be password then. Can't see it 'cus it's a "secret".
		$handle->get_database->_update_quoted(
			$user_ds->get_sql_table_name,
			["userid"],
			[$handle->get_database->quote_value($userid)],
			["password","newpassword","pin"],
			[$handle->get_database->quote_identifier("newpassword"),"NULL","NULL"],
		);
		$page->appendChild( $handle->html_phrase( "cgi/confirm:set_password" ) );
		$handle->login( $user );
	}

	$page->appendChild( $handle->html_phrase( "cgi/confirm:username",
		username => $user->render_value( "username" ) ) );

	$page->appendChild( $handle->html_phrase( "cgi/confirm:go_login" ) );

	return( $handle->html_phrase( "cgi/confirm:title" ) , $page );
}

