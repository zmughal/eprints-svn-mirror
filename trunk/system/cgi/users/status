######################################################################
#
#  EPrints Staff Status Page
#
######################################################################
#
#  __COPYRIGHT__
#
# Copyright 2000-2008 University of Southampton. All Rights Reserved.
# 
#  __LICENSE__
#
######################################################################

use EPrints::Session;
use EPrints::HTMLRender;
use EPrints::Database;
use EPrints::EPrint;
use EPrints::User;
#crashy cjg
use strict;

my $session = new EPrints::Session;


my $rows;

# Number of users in each group
my $num_users = count( "user" );

my( %num_users, $usertypes, $usertype, $userds );
$userds = $session->get_archive()->get_dataset( "user" );
$usertypes = $userds->get_types();
foreach $usertype ( @{$usertypes} )
{
	$num_users{ $usertype } = count( "user", usertype => $usertype );
}

# Number of submissions in workspace
my $num_inbox = count( "inbox" );

# Number of submissions in buffer
my $num_buffer = count( "buffer" );

# Number of submissions in archive
my $num_archive = count( "archive" );

# Number of deleted eprints
my $num_deleted = count( "deletion" );

# Number of subscriptions
my $num_subs = count( "subscription" );

my $db_status = ( $num_users > 0 ? "OK" : "DOWN" );


my( $html , $table , $p , $span );

# Write the results to a table

$html = $session->make_doc_fragment;

$table = $session->make_element( "table", border=>"0" );
$html->appendChild( $table );

$table->appendChild( render_row( 
		$session,
		$session->make_text( "EPrints Release:" ), 
		$session->make_text( 
			$EPrints::Config::get( "version_desc" ) ) ) );

$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Database Status:" ), 
		$session->make_text( $db_status ) ) );

$table->appendChild( render_empty_row( $session ) );

foreach $usertype ( keys %num_users )
{
	#lang cjg
	$table->appendChild(
		render_row( 
			$session,
			$session->make_text(
				$userds->get_type_name( $session, $usertype )), 
			$session->make_text( $num_users{$usertype} ) ) );
}
$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Total Users:" ), 
		$session->make_text( $num_users ) ) );

$table->appendChild( render_empty_row( $session ) );

$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Articles in archive:" ), 
		$session->make_text( $num_archive ) ) );
$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Articles in buffer:" ), 
		$session->make_text( $num_buffer ) ) );
$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Articles in workspace:" ), 
		$session->make_text( $num_inbox ) ) );
$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Deleted Articles:" ),
		$session->make_text( $num_deleted ) ) );

$table->appendChild( render_empty_row( $session ) );

$table->appendChild(
	render_row( 
		$session,
		$session->make_text( "Subscriptions:" ), 
		$session->make_text( $num_subs ) ) );

$table->appendChild( render_empty_row( $session ) );

my $best_size = 0;

my @dirs = $session->get_archive()->get_store_dirs();
my $dir;
foreach $dir ( @dirs )
{
	my $size = $session->get_archive()->get_store_dir_size();
	$table->appendChild(
		render_row( 
			$session,
			$session->make_text( "Document partition $dir:" ), 
			$session->make_text( int($size/1024)."Mb free" ) ) );

	$best_size = $size if( $size > $best_size );
}

if( $best_size < $session->get_archive()->get_conf( "diskspace_error_threshold" ) )
{
	$p = $session->make_element( "p" );
	$html->appendChild( $p );
	$span = $session->make_element( "span", class=>"alert" );
	$p->appendChild( $span );
	$span->appendChild( 
		$session->make_text( "NO SPACE LEFT FOR EPRINTS!" ) );
}
elsif( $best_size < $session->get_archive()->get_conf( "diskspace_warn_threshold" ) )
{
	$p = $session->make_element( "p" );
	$html->appendChild( $p );
	$span = $session->make_element( "span", class=>"alert" );
	$p->appendChild( $span );
	$span->appendChild( 
		$session->make_text( "WARNING:" ) );
	$p->appendChild( 
		$session->make_text( 
			" Available space for new EPrints running low" ) );
}

$session->build_page( "Server Status", $html );

$session->send_page(); 

$session->terminate();




sub render_empty_row
{
	my( $session ) = @_;

	return render_row( 
		$session,
		$session->make_text( "" ), 
		$session->make_text( "" ) );
}
	
	
# this cjg should probably by styled.
sub render_row
{
	my( $session, $key, $val ) = @_;
	
	my( $tr, $td );
	$tr = $session->make_element( "tr" );
	$td = $session->make_element( "td" );
	$tr->appendChild( $td );
	$td->appendChild( $key );
	$td = $session->make_element( "td" );
	$tr->appendChild( $td );
	$td->appendChild( $val );

	return $tr;
}

# maybe this could be utility? cjg
sub count
{
	my( $datasetid, %searchfields ) = @_;
		
	my $dataset = $session->get_archive()->get_dataset( $datasetid );

	my $searchexp = new EPrints::SearchExpression(
		session => $session,
		dataset => $dataset,
		allowblank => 1 );

	my $searchfield;
	foreach $searchfield ( keys %searchfields )
	{
		$searchexp->add_field(
			$dataset->get_field( $searchfield ),
			"PHR:EQ:".$searchfields{ $searchfield } );
	}

	$searchexp->perform_search();

	my $count = $searchexp->count();

print STDERR "count:$datasetid:$count\n";
	
	return( $count );
}
